
# 1 "D:\Work_PIC\HPT2\Application\src\uhf_comms.c"

# 118 "D:\PICC\9.81\include\pic16f886.h"
volatile unsigned char INDF @ 0x000;



volatile unsigned char TMR0 @ 0x001;



volatile unsigned char PCL @ 0x002;



volatile unsigned char STATUS @ 0x003;

volatile bit CARRY @ ((unsigned)&STATUS*8)+0;
volatile bit DC @ ((unsigned)&STATUS*8)+1;
volatile bit ZERO @ ((unsigned)&STATUS*8)+2;
volatile bit nPD @ ((unsigned)&STATUS*8)+3;
volatile bit nTO @ ((unsigned)&STATUS*8)+4;
volatile bit IRP @ ((unsigned)&STATUS*8)+7;
volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
volatile bit RP1 @ ((unsigned)&STATUS*8)+6;

volatile union {
struct {
unsigned C : 1;
unsigned DC : 1;
unsigned Z : 1;
unsigned nPD : 1;
unsigned nTO : 1;
unsigned RP : 2;
unsigned IRP : 1;
};
struct {
unsigned : 5;
unsigned RP0 : 1;
unsigned RP1 : 1;
};
} STATUSbits @ 0x003;



volatile unsigned char FSR @ 0x004;



volatile unsigned char PORTA @ 0x005;

volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
volatile bit RA6 @ ((unsigned)&PORTA*8)+6;
volatile bit RA7 @ ((unsigned)&PORTA*8)+7;

volatile union {
struct {
unsigned RA0 : 1;
unsigned RA1 : 1;
unsigned RA2 : 1;
unsigned RA3 : 1;
unsigned RA4 : 1;
unsigned RA5 : 1;
unsigned RA6 : 1;
unsigned RA7 : 1;
};
} PORTAbits @ 0x005;



volatile unsigned char PORTB @ 0x006;

volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
volatile bit RB7 @ ((unsigned)&PORTB*8)+7;

volatile union {
struct {
unsigned RB0 : 1;
unsigned RB1 : 1;
unsigned RB2 : 1;
unsigned RB3 : 1;
unsigned RB4 : 1;
unsigned RB5 : 1;
unsigned RB6 : 1;
unsigned RB7 : 1;
};
} PORTBbits @ 0x006;



volatile unsigned char PORTC @ 0x007;

volatile bit RC0 @ ((unsigned)&PORTC*8)+0;
volatile bit RC1 @ ((unsigned)&PORTC*8)+1;
volatile bit RC2 @ ((unsigned)&PORTC*8)+2;
volatile bit RC3 @ ((unsigned)&PORTC*8)+3;
volatile bit RC4 @ ((unsigned)&PORTC*8)+4;
volatile bit RC5 @ ((unsigned)&PORTC*8)+5;
volatile bit RC6 @ ((unsigned)&PORTC*8)+6;
volatile bit RC7 @ ((unsigned)&PORTC*8)+7;

volatile union {
struct {
unsigned RC0 : 1;
unsigned RC1 : 1;
unsigned RC2 : 1;
unsigned RC3 : 1;
unsigned RC4 : 1;
unsigned RC5 : 1;
unsigned RC6 : 1;
unsigned RC7 : 1;
};
} PORTCbits @ 0x007;



volatile unsigned char PORTE @ 0x009;

volatile bit RE3 @ ((unsigned)&PORTE*8)+3;

volatile union {
struct {
unsigned : 3;
unsigned RE3 : 1;
};
} PORTEbits @ 0x009;



volatile unsigned char PCLATH @ 0x00A;


volatile union {
struct {
unsigned : 5;
};
} PCLATHbits @ 0x00A;



volatile unsigned char INTCON @ 0x00B;

volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
volatile bit INTF @ ((unsigned)&INTCON*8)+1;
volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
volatile bit INTE @ ((unsigned)&INTCON*8)+4;
volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
volatile bit GIE @ ((unsigned)&INTCON*8)+7;
volatile bit TMR0IF @ ((unsigned)&INTCON*8)+2;
volatile bit TMR0IE @ ((unsigned)&INTCON*8)+5;

volatile union {
struct {
unsigned RBIF : 1;
unsigned INTF : 1;
unsigned T0IF : 1;
unsigned RBIE : 1;
unsigned INTE : 1;
unsigned T0IE : 1;
unsigned PEIE : 1;
unsigned GIE : 1;
};
struct {
unsigned : 2;
unsigned TMR0IF : 1;
unsigned : 2;
unsigned TMR0IE : 1;
};
} INTCONbits @ 0x00B;



volatile unsigned char PIR1 @ 0x00C;

volatile bit TMR1IF @ ((unsigned)&PIR1*8)+0;
volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
volatile bit CCP1IF @ ((unsigned)&PIR1*8)+2;
volatile bit SSPIF @ ((unsigned)&PIR1*8)+3;
volatile bit TXIF @ ((unsigned)&PIR1*8)+4;
volatile bit RCIF @ ((unsigned)&PIR1*8)+5;
volatile bit ADIF @ ((unsigned)&PIR1*8)+6;
volatile bit PSPIF @ ((unsigned)&PIR1*8)+7;

volatile union {
struct {
unsigned TMR1IF : 1;
unsigned TMR2IF : 1;
unsigned CCP1IF : 1;
unsigned SSPIF : 1;
unsigned TXIF : 1;
unsigned RCIF : 1;
unsigned ADIF : 1;
};
struct {
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 2;
unsigned : 1;
unsigned PSPIF : 1;
};
} PIR1bits @ 0x00C;



volatile unsigned char PIR2 @ 0x00D;

volatile bit CCP2IF @ ((unsigned)&PIR2*8)+0;
volatile bit ULPWUIF @ ((unsigned)&PIR2*8)+2;
volatile bit BCLIF @ ((unsigned)&PIR2*8)+3;
volatile bit EEIF @ ((unsigned)&PIR2*8)+4;
volatile bit C1IF @ ((unsigned)&PIR2*8)+5;
volatile bit C2IF @ ((unsigned)&PIR2*8)+6;
volatile bit OSFIF @ ((unsigned)&PIR2*8)+7;

volatile union {
struct {
unsigned CCP2IF : 1;
unsigned : 1;
unsigned ULPWUIF : 1;
unsigned BCLIF : 1;
unsigned EEIF : 1;
unsigned C1IF : 1;
unsigned C2IF : 1;
unsigned OSFIF : 1;
};
} PIR2bits @ 0x00D;




volatile unsigned char TMR1L @ 0x00E;



volatile unsigned char TMR1H @ 0x00F;



volatile unsigned int TMR1 @ 0x00E;


volatile unsigned char T1CON @ 0x010;

volatile bit TMR1ON @ ((unsigned)&T1CON*8)+0;
volatile bit TMR1CS @ ((unsigned)&T1CON*8)+1;
volatile bit nT1SYNC @ ((unsigned)&T1CON*8)+2;
volatile bit T1OSCEN @ ((unsigned)&T1CON*8)+3;
volatile bit TMR1GE @ ((unsigned)&T1CON*8)+6;
volatile bit T1GINV @ ((unsigned)&T1CON*8)+7;
volatile bit T1INSYNC @ ((unsigned)&T1CON*8)+2;
volatile bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
volatile bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;
volatile bit T1GIV @ ((unsigned)&T1CON*8)+7;
volatile bit T1SYNC @ ((unsigned)&T1CON*8)+2;

volatile union {
struct {
unsigned TMR1ON : 1;
unsigned TMR1CS : 1;
unsigned nT1SYNC : 1;
unsigned T1OSCEN : 1;
unsigned T1CKPS : 2;
unsigned TMR1GE : 1;
unsigned T1GINV : 1;
};
struct {
unsigned : 2;
unsigned T1INSYNC : 1;
unsigned : 1;
unsigned T1CKPS0 : 1;
unsigned T1CKPS1 : 1;
unsigned : 1;
unsigned T1GIV : 1;
};
struct {
unsigned : 2;
unsigned T1SYNC : 1;
};
} T1CONbits @ 0x010;



volatile unsigned char TMR2 @ 0x011;



volatile unsigned char T2CON @ 0x012;

volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;

volatile union {
struct {
unsigned T2CKPS : 2;
unsigned TMR2ON : 1;
unsigned TOUTPS : 4;
};
struct {
unsigned T2CKPS0 : 1;
unsigned T2CKPS1 : 1;
unsigned : 1;
unsigned TOUTPS0 : 1;
unsigned TOUTPS1 : 1;
unsigned TOUTPS2 : 1;
unsigned TOUTPS3 : 1;
};
} T2CONbits @ 0x012;



volatile unsigned char SSPBUF @ 0x013;



volatile unsigned char SSPCON @ 0x014;

volatile bit CKP @ ((unsigned)&SSPCON*8)+4;
volatile bit SSPEN @ ((unsigned)&SSPCON*8)+5;
volatile bit SSPOV @ ((unsigned)&SSPCON*8)+6;
volatile bit WCOL @ ((unsigned)&SSPCON*8)+7;
volatile bit SSPM0 @ ((unsigned)&SSPCON*8)+0;
volatile bit SSPM1 @ ((unsigned)&SSPCON*8)+1;
volatile bit SSPM2 @ ((unsigned)&SSPCON*8)+2;
volatile bit SSPM3 @ ((unsigned)&SSPCON*8)+3;

volatile union {
struct {
unsigned SSPM : 4;
unsigned CKP : 1;
unsigned SSPEN : 1;
unsigned SSPOV : 1;
unsigned WCOL : 1;
};
struct {
unsigned SSPM0 : 1;
unsigned SSPM1 : 1;
unsigned SSPM2 : 1;
unsigned SSPM3 : 1;
};
} SSPCONbits @ 0x014;




volatile unsigned char CCPR1L @ 0x015;



volatile unsigned char CCPR1H @ 0x016;



volatile unsigned int CCPR1 @ 0x015;


volatile unsigned char CCP1CON @ 0x017;

volatile bit CCP1M0 @ ((unsigned)&CCP1CON*8)+0;
volatile bit CCP1M1 @ ((unsigned)&CCP1CON*8)+1;
volatile bit CCP1M2 @ ((unsigned)&CCP1CON*8)+2;
volatile bit CCP1M3 @ ((unsigned)&CCP1CON*8)+3;
volatile bit DC1B0 @ ((unsigned)&CCP1CON*8)+4;
volatile bit DC1B1 @ ((unsigned)&CCP1CON*8)+5;
volatile bit P1M0 @ ((unsigned)&CCP1CON*8)+6;
volatile bit P1M1 @ ((unsigned)&CCP1CON*8)+7;
volatile bit CCP1Y @ ((unsigned)&CCP1CON*8)+4;
volatile bit CCP1X @ ((unsigned)&CCP1CON*8)+5;

volatile union {
struct {
unsigned CCP1M : 4;
unsigned DC1B : 2;
unsigned P1M : 2;
};
struct {
unsigned CCP1M0 : 1;
unsigned CCP1M1 : 1;
unsigned CCP1M2 : 1;
unsigned CCP1M3 : 1;
unsigned DC1B0 : 1;
unsigned DC1B1 : 1;
unsigned P1M0 : 1;
unsigned P1M1 : 1;
};
struct {
unsigned : 4;
unsigned CCP1Y : 1;
unsigned CCP1X : 1;
};
} CCP1CONbits @ 0x017;



volatile unsigned char RCSTA @ 0x018;

volatile bit RX9D @ ((unsigned)&RCSTA*8)+0;
volatile bit OERR @ ((unsigned)&RCSTA*8)+1;
volatile bit FERR @ ((unsigned)&RCSTA*8)+2;
volatile bit ADDEN @ ((unsigned)&RCSTA*8)+3;
volatile bit CREN @ ((unsigned)&RCSTA*8)+4;
volatile bit SREN @ ((unsigned)&RCSTA*8)+5;
volatile bit RX9 @ ((unsigned)&RCSTA*8)+6;
volatile bit SPEN @ ((unsigned)&RCSTA*8)+7;
volatile bit RCD8 @ ((unsigned)&RCSTA*8)+0;
volatile bit RC9 @ ((unsigned)&RCSTA*8)+6;
volatile bit nRC8 @ ((unsigned)&RCSTA*8)+6;
volatile bit RC8_9 @ ((unsigned)&RCSTA*8)+6;

volatile union {
struct {
unsigned RX9D : 1;
unsigned OERR : 1;
unsigned FERR : 1;
unsigned ADDEN : 1;
unsigned CREN : 1;
unsigned SREN : 1;
unsigned RX9 : 1;
unsigned SPEN : 1;
};
struct {
unsigned RCD8 : 1;
unsigned : 5;
unsigned RC9 : 1;
};
struct {
unsigned : 6;
unsigned nRC8 : 1;
};
struct {
unsigned : 6;
unsigned RC8_9 : 1;
};
} RCSTAbits @ 0x018;



volatile unsigned char TXREG @ 0x019;



volatile unsigned char RCREG @ 0x01A;




volatile unsigned char CCPR2L @ 0x01B;



volatile unsigned char CCPR2H @ 0x01C;



volatile unsigned int CCPR2 @ 0x01B;


volatile unsigned char CCP2CON @ 0x01D;

volatile bit DC2B0 @ ((unsigned)&CCP2CON*8)+4;
volatile bit DC2B1 @ ((unsigned)&CCP2CON*8)+5;
volatile bit CCP2M0 @ ((unsigned)&CCP2CON*8)+0;
volatile bit CCP2M1 @ ((unsigned)&CCP2CON*8)+1;
volatile bit CCP2M2 @ ((unsigned)&CCP2CON*8)+2;
volatile bit CCP2M3 @ ((unsigned)&CCP2CON*8)+3;
volatile bit CCP2Y @ ((unsigned)&CCP2CON*8)+4;
volatile bit CCP2X @ ((unsigned)&CCP2CON*8)+5;

volatile union {
struct {
unsigned CCP2M : 4;
unsigned DC2B0 : 1;
unsigned DC2B1 : 1;
};
struct {
unsigned CCP2M0 : 1;
unsigned CCP2M1 : 1;
unsigned CCP2M2 : 1;
unsigned CCP2M3 : 1;
unsigned CCP2Y : 1;
unsigned CCP2X : 1;
};
} CCP2CONbits @ 0x01D;



volatile unsigned char ADRESH @ 0x01E;



volatile unsigned char ADCON0 @ 0x01F;

volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
volatile bit GO_nDONE @ ((unsigned)&ADCON0*8)+1;
volatile bit GO @ ((unsigned)&ADCON0*8)+1;
volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;
volatile bit nDONE @ ((unsigned)&ADCON0*8)+1;
volatile bit GO_DONE @ ((unsigned)&ADCON0*8)+1;

volatile union {
struct {
unsigned ADON : 1;
unsigned GO_nDONE : 1;
unsigned CHS : 4;
unsigned ADCS : 2;
};
struct {
unsigned : 1;
unsigned : 1;
unsigned : 4;
unsigned : 2;
};
struct {
unsigned : 1;
unsigned GO : 1;
unsigned CHS0 : 1;
unsigned CHS1 : 1;
unsigned CHS2 : 1;
unsigned CHS3 : 1;
unsigned ADCS0 : 1;
unsigned ADCS1 : 1;
};
struct {
unsigned : 1;
unsigned nDONE : 1;
};
struct {
unsigned : 1;
unsigned GO_DONE : 1;
};
} ADCON0bits @ 0x01F;

# 678
volatile unsigned char OPTION_REG @ 0x081;

volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
volatile bit nRBPU @ ((unsigned)&OPTION_REG*8)+7;
volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;

volatile union {
struct {
unsigned PS : 3;
unsigned PSA : 1;
unsigned T0SE : 1;
unsigned T0CS : 1;
unsigned INTEDG : 1;
unsigned nRBPU : 1;
};
struct {
unsigned PS0 : 1;
unsigned PS1 : 1;
unsigned PS2 : 1;
};
} OPTION_REGbits @ 0x081;



volatile unsigned char TRISA @ 0x085;

volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
volatile bit TRISA6 @ ((unsigned)&TRISA*8)+6;
volatile bit TRISA7 @ ((unsigned)&TRISA*8)+7;

volatile union {
struct {
unsigned TRISA0 : 1;
unsigned TRISA1 : 1;
unsigned TRISA2 : 1;
unsigned TRISA3 : 1;
unsigned TRISA4 : 1;
unsigned TRISA5 : 1;
unsigned TRISA6 : 1;
unsigned TRISA7 : 1;
};
} TRISAbits @ 0x085;



volatile unsigned char TRISB @ 0x086;

volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;

volatile union {
struct {
unsigned TRISB0 : 1;
unsigned TRISB1 : 1;
unsigned TRISB2 : 1;
unsigned TRISB3 : 1;
unsigned TRISB4 : 1;
unsigned TRISB5 : 1;
unsigned TRISB6 : 1;
unsigned TRISB7 : 1;
};
} TRISBbits @ 0x086;



volatile unsigned char TRISC @ 0x087;

volatile bit TRISC0 @ ((unsigned)&TRISC*8)+0;
volatile bit TRISC1 @ ((unsigned)&TRISC*8)+1;
volatile bit TRISC2 @ ((unsigned)&TRISC*8)+2;
volatile bit TRISC3 @ ((unsigned)&TRISC*8)+3;
volatile bit TRISC4 @ ((unsigned)&TRISC*8)+4;
volatile bit TRISC5 @ ((unsigned)&TRISC*8)+5;
volatile bit TRISC6 @ ((unsigned)&TRISC*8)+6;
volatile bit TRISC7 @ ((unsigned)&TRISC*8)+7;

volatile union {
struct {
unsigned TRISC0 : 1;
unsigned TRISC1 : 1;
unsigned TRISC2 : 1;
unsigned TRISC3 : 1;
unsigned TRISC4 : 1;
unsigned TRISC5 : 1;
unsigned TRISC6 : 1;
unsigned TRISC7 : 1;
};
} TRISCbits @ 0x087;



volatile unsigned char TRISE @ 0x089;

volatile bit TRISE3 @ ((unsigned)&TRISE*8)+3;

volatile union {
struct {
unsigned : 3;
unsigned TRISE3 : 1;
};
} TRISEbits @ 0x089;



volatile unsigned char PIE1 @ 0x08C;

volatile bit TMR1IE @ ((unsigned)&PIE1*8)+0;
volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
volatile bit CCP1IE @ ((unsigned)&PIE1*8)+2;
volatile bit SSPIE @ ((unsigned)&PIE1*8)+3;
volatile bit TXIE @ ((unsigned)&PIE1*8)+4;
volatile bit RCIE @ ((unsigned)&PIE1*8)+5;
volatile bit ADIE @ ((unsigned)&PIE1*8)+6;

volatile union {
struct {
unsigned TMR1IE : 1;
unsigned TMR2IE : 1;
unsigned CCP1IE : 1;
unsigned SSPIE : 1;
unsigned TXIE : 1;
unsigned RCIE : 1;
unsigned ADIE : 1;
};
} PIE1bits @ 0x08C;



volatile unsigned char PIE2 @ 0x08D;

volatile bit CCP2IE @ ((unsigned)&PIE2*8)+0;
volatile bit ULPWUIE @ ((unsigned)&PIE2*8)+2;
volatile bit BCLIE @ ((unsigned)&PIE2*8)+3;
volatile bit EEIE @ ((unsigned)&PIE2*8)+4;
volatile bit C1IE @ ((unsigned)&PIE2*8)+5;
volatile bit C2IE @ ((unsigned)&PIE2*8)+6;
volatile bit OSFIE @ ((unsigned)&PIE2*8)+7;

volatile union {
struct {
unsigned CCP2IE : 1;
unsigned : 1;
unsigned ULPWUIE : 1;
unsigned BCLIE : 1;
unsigned EEIE : 1;
unsigned C1IE : 1;
unsigned C2IE : 1;
unsigned OSFIE : 1;
};
} PIE2bits @ 0x08D;



volatile unsigned char PCON @ 0x08E;

volatile bit nBOR @ ((unsigned)&PCON*8)+0;
volatile bit nPOR @ ((unsigned)&PCON*8)+1;
volatile bit SBOREN @ ((unsigned)&PCON*8)+4;
volatile bit ULPWUE @ ((unsigned)&PCON*8)+5;
volatile bit nBO @ ((unsigned)&PCON*8)+0;

volatile union {
struct {
unsigned nBOR : 1;
unsigned nPOR : 1;
unsigned : 2;
unsigned SBOREN : 1;
unsigned ULPWUE : 1;
};
struct {
unsigned nBO : 1;
};
} PCONbits @ 0x08E;



volatile unsigned char OSCCON @ 0x08F;

volatile bit SCS @ ((unsigned)&OSCCON*8)+0;
volatile bit LTS @ ((unsigned)&OSCCON*8)+1;
volatile bit HTS @ ((unsigned)&OSCCON*8)+2;
volatile bit OSTS @ ((unsigned)&OSCCON*8)+3;
volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;

volatile union {
struct {
unsigned SCS : 1;
unsigned LTS : 1;
unsigned HTS : 1;
unsigned OSTS : 1;
unsigned IRFC : 3;
};
struct {
unsigned : 4;
unsigned IRCF0 : 1;
unsigned IRCF1 : 1;
unsigned IRCF2 : 1;
};
} OSCCONbits @ 0x08F;



volatile unsigned char OSCTUNE @ 0x090;

volatile bit TUN0 @ ((unsigned)&OSCTUNE*8)+0;
volatile bit TUN1 @ ((unsigned)&OSCTUNE*8)+1;
volatile bit TUN2 @ ((unsigned)&OSCTUNE*8)+2;
volatile bit TUN3 @ ((unsigned)&OSCTUNE*8)+3;
volatile bit TUN4 @ ((unsigned)&OSCTUNE*8)+4;

volatile union {
struct {
unsigned TUN : 5;
};
struct {
unsigned TUN0 : 1;
unsigned TUN1 : 1;
unsigned TUN2 : 1;
unsigned TUN3 : 1;
unsigned TUN4 : 1;
};
} OSCTUNEbits @ 0x090;



volatile unsigned char SSPCON2 @ 0x091;

volatile bit SEN @ ((unsigned)&SSPCON2*8)+0;
volatile bit RSEN @ ((unsigned)&SSPCON2*8)+1;
volatile bit PEN @ ((unsigned)&SSPCON2*8)+2;
volatile bit RCEN @ ((unsigned)&SSPCON2*8)+3;
volatile bit ACKEN @ ((unsigned)&SSPCON2*8)+4;
volatile bit ACKDT @ ((unsigned)&SSPCON2*8)+5;
volatile bit ACKSTAT @ ((unsigned)&SSPCON2*8)+6;
volatile bit GCEN @ ((unsigned)&SSPCON2*8)+7;

volatile union {
struct {
unsigned SEN : 1;
unsigned RSEN : 1;
unsigned PEN : 1;
unsigned RCEN : 1;
unsigned ACKEN : 1;
unsigned ACKDT : 1;
unsigned ACKSTAT : 1;
unsigned GCEN : 1;
};
} SSPCON2bits @ 0x091;



volatile unsigned char PR2 @ 0x092;



volatile unsigned char SSPADD @ 0x093;



volatile unsigned char SSPMSK @ 0x093;
volatile unsigned char MSK @ 0x093;

volatile bit MSK0 @ ((unsigned)&SSPMSK*8)+0;
volatile bit MSK1 @ ((unsigned)&SSPMSK*8)+1;
volatile bit MSK2 @ ((unsigned)&SSPMSK*8)+2;
volatile bit MSK3 @ ((unsigned)&SSPMSK*8)+3;
volatile bit MSK4 @ ((unsigned)&SSPMSK*8)+4;
volatile bit MSK5 @ ((unsigned)&SSPMSK*8)+5;
volatile bit MSK6 @ ((unsigned)&SSPMSK*8)+6;
volatile bit MSK7 @ ((unsigned)&SSPMSK*8)+7;

volatile union {
struct {
unsigned MSK0 : 1;
unsigned MSK1 : 1;
unsigned MSK2 : 1;
unsigned MSK3 : 1;
unsigned MSK4 : 1;
unsigned MSK5 : 1;
unsigned MSK6 : 1;
unsigned MSK7 : 1;
};
} SSPMSKbits @ 0x093;



volatile unsigned char SSPSTAT @ 0x094;

volatile bit BF @ ((unsigned)&SSPSTAT*8)+0;
volatile bit UA @ ((unsigned)&SSPSTAT*8)+1;
volatile bit R_nW @ ((unsigned)&SSPSTAT*8)+2;
volatile bit S @ ((unsigned)&SSPSTAT*8)+3;
volatile bit P @ ((unsigned)&SSPSTAT*8)+4;
volatile bit D_nA @ ((unsigned)&SSPSTAT*8)+5;
volatile bit CKE @ ((unsigned)&SSPSTAT*8)+6;
volatile bit SMP @ ((unsigned)&SSPSTAT*8)+7;
volatile bit R @ ((unsigned)&SSPSTAT*8)+2;
volatile bit D @ ((unsigned)&SSPSTAT*8)+5;
volatile bit I2C_READ @ ((unsigned)&SSPSTAT*8)+2;
volatile bit I2C_START @ ((unsigned)&SSPSTAT*8)+3;
volatile bit I2C_STOP @ ((unsigned)&SSPSTAT*8)+4;
volatile bit I2C_DATA @ ((unsigned)&SSPSTAT*8)+5;
volatile bit nW @ ((unsigned)&SSPSTAT*8)+2;
volatile bit nA @ ((unsigned)&SSPSTAT*8)+5;
volatile bit nWRITE @ ((unsigned)&SSPSTAT*8)+2;
volatile bit nADDRESS @ ((unsigned)&SSPSTAT*8)+5;
volatile bit R_W @ ((unsigned)&SSPSTAT*8)+2;
volatile bit D_A @ ((unsigned)&SSPSTAT*8)+5;
volatile bit READ_WRITE @ ((unsigned)&SSPSTAT*8)+2;
volatile bit DATA_ADDRESS @ ((unsigned)&SSPSTAT*8)+5;

volatile union {
struct {
unsigned BF : 1;
unsigned UA : 1;
unsigned R_nW : 1;
unsigned S : 1;
unsigned P : 1;
unsigned D_nA : 1;
unsigned CKE : 1;
unsigned SMP : 1;
};
struct {
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 1;
unsigned : 1;
};
struct {
unsigned : 2;
unsigned R : 1;
unsigned : 2;
unsigned D : 1;
};
struct {
unsigned : 2;
unsigned I2C_READ : 1;
unsigned I2C_START : 1;
unsigned I2C_STOP : 1;
unsigned I2C_DATA : 1;
};
struct {
unsigned : 2;
unsigned nW : 1;
unsigned : 2;
unsigned nA : 1;
};
struct {
unsigned : 2;
unsigned nWRITE : 1;
unsigned : 2;
unsigned nADDRESS : 1;
};
struct {
unsigned : 2;
unsigned R_W : 1;
unsigned : 2;
unsigned D_A : 1;
};
struct {
unsigned : 2;
unsigned READ_WRITE : 1;
unsigned : 2;
unsigned DATA_ADDRESS : 1;
};
} SSPSTATbits @ 0x094;



volatile unsigned char WPUB @ 0x095;

volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;

volatile union {
struct {
unsigned WPUB0 : 1;
unsigned WPUB1 : 1;
unsigned WPUB2 : 1;
unsigned WPUB3 : 1;
unsigned WPUB4 : 1;
unsigned WPUB5 : 1;
unsigned WPUB6 : 1;
unsigned WPUB7 : 1;
};
} WPUBbits @ 0x095;



volatile unsigned char IOCB @ 0x096;

volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;
volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;

volatile union {
struct {
unsigned IOCB0 : 1;
unsigned IOCB1 : 1;
unsigned IOCB2 : 1;
unsigned IOCB3 : 1;
unsigned IOCB4 : 1;
unsigned IOCB5 : 1;
unsigned IOCB6 : 1;
unsigned IOCB7 : 1;
};
} IOCBbits @ 0x096;



volatile unsigned char VRCON @ 0x097;

volatile bit VRSS @ ((unsigned)&VRCON*8)+4;
volatile bit VRR @ ((unsigned)&VRCON*8)+5;
volatile bit VROE @ ((unsigned)&VRCON*8)+6;
volatile bit VREN @ ((unsigned)&VRCON*8)+7;
volatile bit VR0 @ ((unsigned)&VRCON*8)+0;
volatile bit VR1 @ ((unsigned)&VRCON*8)+1;
volatile bit VR2 @ ((unsigned)&VRCON*8)+2;
volatile bit VR3 @ ((unsigned)&VRCON*8)+3;

volatile union {
struct {
unsigned VR : 4;
unsigned VRSS : 1;
unsigned VRR : 1;
unsigned VROE : 1;
unsigned VREN : 1;
};
struct {
unsigned VR0 : 1;
unsigned VR1 : 1;
unsigned VR2 : 1;
unsigned VR3 : 1;
};
} VRCONbits @ 0x097;



volatile unsigned char TXSTA @ 0x098;

volatile bit TX9D @ ((unsigned)&TXSTA*8)+0;
volatile bit TRMT @ ((unsigned)&TXSTA*8)+1;
volatile bit BRGH @ ((unsigned)&TXSTA*8)+2;
volatile bit SENDB @ ((unsigned)&TXSTA*8)+3;
volatile bit SYNC @ ((unsigned)&TXSTA*8)+4;
volatile bit TXEN @ ((unsigned)&TXSTA*8)+5;
volatile bit TX9 @ ((unsigned)&TXSTA*8)+6;
volatile bit CSRC @ ((unsigned)&TXSTA*8)+7;
volatile bit TXD8 @ ((unsigned)&TXSTA*8)+0;
volatile bit nTX8 @ ((unsigned)&TXSTA*8)+6;
volatile bit TX8_9 @ ((unsigned)&TXSTA*8)+6;

volatile union {
struct {
unsigned TX9D : 1;
unsigned TRMT : 1;
unsigned BRGH : 1;
unsigned SENDB : 1;
unsigned SYNC : 1;
unsigned TXEN : 1;
unsigned TX9 : 1;
unsigned CSRC : 1;
};
struct {
unsigned TXD8 : 1;
unsigned : 5;
unsigned nTX8 : 1;
};
struct {
unsigned : 6;
unsigned TX8_9 : 1;
};
} TXSTAbits @ 0x098;



volatile unsigned char SPBRG @ 0x099;

volatile bit BRG0 @ ((unsigned)&SPBRG*8)+0;
volatile bit BRG1 @ ((unsigned)&SPBRG*8)+1;
volatile bit BRG2 @ ((unsigned)&SPBRG*8)+2;
volatile bit BRG3 @ ((unsigned)&SPBRG*8)+3;
volatile bit BRG4 @ ((unsigned)&SPBRG*8)+4;
volatile bit BRG5 @ ((unsigned)&SPBRG*8)+5;
volatile bit BRG6 @ ((unsigned)&SPBRG*8)+6;
volatile bit BRG7 @ ((unsigned)&SPBRG*8)+7;

volatile union {
struct {
unsigned BRG0 : 1;
unsigned BRG1 : 1;
unsigned BRG2 : 1;
unsigned BRG3 : 1;
unsigned BRG4 : 1;
unsigned BRG5 : 1;
unsigned BRG6 : 1;
unsigned BRG7 : 1;
};
} SPBRGbits @ 0x099;



volatile unsigned char SPBRGH @ 0x09A;

volatile bit BRG8 @ ((unsigned)&SPBRGH*8)+0;
volatile bit BRG9 @ ((unsigned)&SPBRGH*8)+1;
volatile bit BRG10 @ ((unsigned)&SPBRGH*8)+2;
volatile bit BRG11 @ ((unsigned)&SPBRGH*8)+3;
volatile bit BRG12 @ ((unsigned)&SPBRGH*8)+4;
volatile bit BRG13 @ ((unsigned)&SPBRGH*8)+5;
volatile bit BRG14 @ ((unsigned)&SPBRGH*8)+6;
volatile bit BRG15 @ ((unsigned)&SPBRGH*8)+7;

volatile union {
struct {
unsigned BRG8 : 1;
unsigned BRG9 : 1;
unsigned BRG10 : 1;
unsigned BRG11 : 1;
unsigned BRG12 : 1;
unsigned BRG13 : 1;
unsigned BRG14 : 1;
unsigned BRG15 : 1;
};
} SPBRGHbits @ 0x09A;



volatile unsigned char PWM1CON @ 0x09B;

volatile bit PRSEN @ ((unsigned)&PWM1CON*8)+7;
volatile bit PDC0 @ ((unsigned)&PWM1CON*8)+0;
volatile bit PDC1 @ ((unsigned)&PWM1CON*8)+1;
volatile bit PDC2 @ ((unsigned)&PWM1CON*8)+2;
volatile bit PDC3 @ ((unsigned)&PWM1CON*8)+3;
volatile bit PDC4 @ ((unsigned)&PWM1CON*8)+4;
volatile bit PDC5 @ ((unsigned)&PWM1CON*8)+5;
volatile bit PDC6 @ ((unsigned)&PWM1CON*8)+6;

volatile union {
struct {
unsigned PDC : 7;
unsigned PRSEN : 1;
};
struct {
unsigned PDC0 : 1;
unsigned PDC1 : 1;
unsigned PDC2 : 1;
unsigned PDC3 : 1;
unsigned PDC4 : 1;
unsigned PDC5 : 1;
unsigned PDC6 : 1;
};
} PWM1CONbits @ 0x09B;



volatile unsigned char ECCPAS @ 0x09C;

volatile bit ECCPASE @ ((unsigned)&ECCPAS*8)+7;
volatile bit PSSBD0 @ ((unsigned)&ECCPAS*8)+0;
volatile bit PSSBD1 @ ((unsigned)&ECCPAS*8)+1;
volatile bit PSSAC0 @ ((unsigned)&ECCPAS*8)+2;
volatile bit PSSAC1 @ ((unsigned)&ECCPAS*8)+3;
volatile bit ECCPAS0 @ ((unsigned)&ECCPAS*8)+4;
volatile bit ECCPAS1 @ ((unsigned)&ECCPAS*8)+5;
volatile bit ECCPAS2 @ ((unsigned)&ECCPAS*8)+6;

volatile union {
struct {
unsigned PSSBD : 2;
unsigned PSSAC : 2;
unsigned ECCPAS : 3;
unsigned ECCPASE : 1;
};
struct {
unsigned PSSBD0 : 1;
unsigned PSSBD1 : 1;
unsigned PSSAC0 : 1;
unsigned PSSAC1 : 1;
unsigned ECCPAS0 : 1;
unsigned ECCPAS1 : 1;
unsigned ECCPAS2 : 1;
};
} ECCPASbits @ 0x09C;



volatile unsigned char PSTRCON @ 0x09D;

volatile bit STRA @ ((unsigned)&PSTRCON*8)+0;
volatile bit STRB @ ((unsigned)&PSTRCON*8)+1;
volatile bit STRC @ ((unsigned)&PSTRCON*8)+2;
volatile bit STRD @ ((unsigned)&PSTRCON*8)+3;
volatile bit STRSYNC @ ((unsigned)&PSTRCON*8)+4;

volatile union {
struct {
unsigned STRA : 1;
unsigned STRB : 1;
unsigned STRC : 1;
unsigned STRD : 1;
unsigned STRSYNC : 1;
};
} PSTRCONbits @ 0x09D;



volatile unsigned char ADRESL @ 0x09E;



volatile unsigned char ADCON1 @ 0x09F;

volatile bit VCFG0 @ ((unsigned)&ADCON1*8)+4;
volatile bit VCFG1 @ ((unsigned)&ADCON1*8)+5;
volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;

volatile union {
struct {
unsigned : 4;
unsigned VCFG0 : 1;
unsigned VCFG1 : 1;
unsigned : 1;
unsigned ADFM : 1;
};
} ADCON1bits @ 0x09F;

# 1347
volatile unsigned char WDTCON @ 0x105;

volatile bit SWDTEN @ ((unsigned)&WDTCON*8)+0;
volatile bit WDTPS0 @ ((unsigned)&WDTCON*8)+1;
volatile bit WDTPS1 @ ((unsigned)&WDTCON*8)+2;
volatile bit WDTPS2 @ ((unsigned)&WDTCON*8)+3;
volatile bit WDTPS3 @ ((unsigned)&WDTCON*8)+4;

volatile union {
struct {
unsigned SWDTEN : 1;
unsigned WDTPS : 4;
};
struct {
unsigned : 1;
unsigned WDTPS0 : 1;
unsigned WDTPS1 : 1;
unsigned WDTPS2 : 1;
unsigned WDTPS3 : 1;
};
} WDTCONbits @ 0x105;



volatile unsigned char CM1CON0 @ 0x107;

volatile bit C1R @ ((unsigned)&CM1CON0*8)+2;
volatile bit C1POL @ ((unsigned)&CM1CON0*8)+4;
volatile bit C1OE @ ((unsigned)&CM1CON0*8)+5;
volatile bit C1OUT @ ((unsigned)&CM1CON0*8)+6;
volatile bit C1ON @ ((unsigned)&CM1CON0*8)+7;
volatile bit C1CH0 @ ((unsigned)&CM1CON0*8)+0;
volatile bit C1CH1 @ ((unsigned)&CM1CON0*8)+1;

volatile union {
struct {
unsigned C1CH : 2;
unsigned C1R : 1;
unsigned : 1;
unsigned C1POL : 1;
unsigned C1OE : 1;
unsigned C1OUT : 1;
unsigned C1ON : 1;
};
struct {
unsigned C1CH0 : 1;
unsigned C1CH1 : 1;
};
} CM1CON0bits @ 0x107;



volatile unsigned char CM2CON0 @ 0x108;

volatile bit C2R @ ((unsigned)&CM2CON0*8)+2;
volatile bit C2POL @ ((unsigned)&CM2CON0*8)+4;
volatile bit C2OE @ ((unsigned)&CM2CON0*8)+5;
volatile bit C2OUT @ ((unsigned)&CM2CON0*8)+6;
volatile bit C2ON @ ((unsigned)&CM2CON0*8)+7;
volatile bit C2CH0 @ ((unsigned)&CM2CON0*8)+0;
volatile bit C2CH1 @ ((unsigned)&CM2CON0*8)+1;

volatile union {
struct {
unsigned C2CH : 2;
unsigned C2R : 1;
unsigned : 1;
unsigned C2POL : 1;
unsigned C2OE : 1;
unsigned C2OUT : 1;
unsigned C2ON : 1;
};
struct {
unsigned C2CH0 : 1;
unsigned C2CH1 : 1;
};
} CM2CON0bits @ 0x108;



volatile unsigned char CM2CON1 @ 0x109;

volatile bit C2SYNC @ ((unsigned)&CM2CON1*8)+0;
volatile bit T1GSS @ ((unsigned)&CM2CON1*8)+1;
volatile bit C2RSEL @ ((unsigned)&CM2CON1*8)+4;
volatile bit C1RSEL @ ((unsigned)&CM2CON1*8)+5;
volatile bit MC2OUT @ ((unsigned)&CM2CON1*8)+6;
volatile bit MC1OUT @ ((unsigned)&CM2CON1*8)+7;

volatile union {
struct {
unsigned C2SYNC : 1;
unsigned T1GSS : 1;
unsigned : 2;
unsigned C2RSEL : 1;
unsigned C1RSEL : 1;
unsigned MC2OUT : 1;
unsigned MC1OUT : 1;
};
} CM2CON1bits @ 0x109;



volatile unsigned char EEDATA @ 0x10C;
volatile unsigned char EEDAT @ 0x10C;



volatile unsigned char EEADR @ 0x10D;



volatile unsigned char EEDATH @ 0x10E;


volatile union {
struct {
unsigned : 6;
};
} EEDATHbits @ 0x10E;



volatile unsigned char EEADRH @ 0x10F;


volatile union {
struct {
unsigned : 5;
};
} EEADRHbits @ 0x10F;

# 1486
volatile unsigned char SRCON @ 0x185;

volatile bit FVREN @ ((unsigned)&SRCON*8)+0;
volatile bit PULSR @ ((unsigned)&SRCON*8)+2;
volatile bit PULSS @ ((unsigned)&SRCON*8)+3;
volatile bit C2REN @ ((unsigned)&SRCON*8)+4;
volatile bit C1SEN @ ((unsigned)&SRCON*8)+5;
volatile bit SR0 @ ((unsigned)&SRCON*8)+6;
volatile bit SR1 @ ((unsigned)&SRCON*8)+7;

volatile union {
struct {
unsigned FVREN : 1;
unsigned : 1;
unsigned PULSR : 1;
unsigned PULSS : 1;
unsigned C2REN : 1;
unsigned C1SEN : 1;
unsigned SR0 : 1;
unsigned SR1 : 1;
};
} SRCONbits @ 0x185;



volatile unsigned char BAUDCTL @ 0x187;

volatile bit ABDEN @ ((unsigned)&BAUDCTL*8)+0;
volatile bit WUE @ ((unsigned)&BAUDCTL*8)+1;
volatile bit BRG16 @ ((unsigned)&BAUDCTL*8)+3;
volatile bit SCKP @ ((unsigned)&BAUDCTL*8)+4;
volatile bit RCIDL @ ((unsigned)&BAUDCTL*8)+6;
volatile bit ABDOVF @ ((unsigned)&BAUDCTL*8)+7;

volatile union {
struct {
unsigned ABDEN : 1;
unsigned WUE : 1;
unsigned : 1;
unsigned BRG16 : 1;
unsigned SCKP : 1;
unsigned : 1;
unsigned RCIDL : 1;
unsigned ABDOVF : 1;
};
} BAUDCTLbits @ 0x187;



volatile unsigned char ANSEL @ 0x188;

volatile bit ANS0 @ ((unsigned)&ANSEL*8)+0;
volatile bit ANS1 @ ((unsigned)&ANSEL*8)+1;
volatile bit ANS2 @ ((unsigned)&ANSEL*8)+2;
volatile bit ANS3 @ ((unsigned)&ANSEL*8)+3;
volatile bit ANS4 @ ((unsigned)&ANSEL*8)+4;

volatile union {
struct {
unsigned ANS0 : 1;
unsigned ANS1 : 1;
unsigned ANS2 : 1;
unsigned ANS3 : 1;
unsigned ANS4 : 1;
};
} ANSELbits @ 0x188;



volatile unsigned char ANSELH @ 0x189;

volatile bit ANS8 @ ((unsigned)&ANSELH*8)+0;
volatile bit ANS9 @ ((unsigned)&ANSELH*8)+1;
volatile bit ANS10 @ ((unsigned)&ANSELH*8)+2;
volatile bit ANS11 @ ((unsigned)&ANSELH*8)+3;
volatile bit ANS12 @ ((unsigned)&ANSELH*8)+4;
volatile bit ANS13 @ ((unsigned)&ANSELH*8)+5;

volatile union {
struct {
unsigned ANS8 : 1;
unsigned ANS9 : 1;
unsigned ANS10 : 1;
unsigned ANS11 : 1;
unsigned ANS12 : 1;
unsigned ANS13 : 1;
};
} ANSELHbits @ 0x189;



volatile unsigned char EECON1 @ 0x18C;

volatile bit RD @ ((unsigned)&EECON1*8)+0;
volatile bit WR @ ((unsigned)&EECON1*8)+1;
volatile bit WREN @ ((unsigned)&EECON1*8)+2;
volatile bit WRERR @ ((unsigned)&EECON1*8)+3;
volatile bit EEPGD @ ((unsigned)&EECON1*8)+7;

volatile union {
struct {
unsigned RD : 1;
unsigned WR : 1;
unsigned WREN : 1;
unsigned WRERR : 1;
unsigned : 3;
unsigned EEPGD : 1;
};
} EECON1bits @ 0x18C;



volatile unsigned char EECON2 @ 0x18D;


# 21 "D:\PICC\9.81\include\pic.h"
#pragma inline(_nop)
extern void _nop(void);

# 74
extern unsigned int flash_read(unsigned short addr);

# 41 "D:\PICC\9.81\include\eeprom_routines.h"
extern void eeprom_write(unsigned char addr, unsigned char value);
extern unsigned char eeprom_read(unsigned char addr);


# 147 "D:\PICC\9.81\include\pic.h"
#pragma inline(_delay)
extern void _delay(unsigned long);

# 28 "..\..\Common\include\types.h"
typedef unsigned short ushort;
typedef unsigned long ulong;
typedef unsigned char BYTE;
typedef unsigned char uchar;

# 51
typedef union {
BYTE b[2];
ushort w;
struct {
BYTE lo;
BYTE hi;
} st;
} short_u;

typedef union {
BYTE b[2];
ushort w;
struct {
BYTE hi;
BYTE lo;
} ho;
} bid_u;



typedef union {
BYTE b[4];
ulong w;




} long_u;

# 85
typedef struct mid24
{
BYTE val[3];
} mid24_s;

# 36 "..\..\Common\include\time.h"
typedef union {
BYTE cnt_byte;
struct {
BYTE lo;
BYTE hi;
}s;
ushort cnt;
} Timer_u;


extern volatile Timer_u timer;
extern BYTE timer_last_tick;
extern BYTE timer_ii;


BYTE chk_timeout( ushort endcount );

# 257 "..\include\mu.h"
enum LMP_STATES {
LAMP_POST_ERROR = 0,
LAMP_FIRMWARE_disabled,
LAMP_SEARCH_IN_PROGRESS,
LAMP_EVACUATE_IN_PROGRESS_disab,
LAMP_IDENTIFY_disabled,

LAMP_PAGER_ALARM,
LAMP_PAGER_CALL_1,
LAMP_PAGER_CALL_2,
LAMP_VLF_BLOCKED_STATE,
LAMP_STATES_NUM,

LAMP_NORMAL_STATE = 0xF0,
LAMP_INVERT_STATE = 0xF1,
LAMP_TEST_STATE = 0xF2,
};


extern BYTE mu_lamp_state;

extern ushort mu_lamp_timeout;
extern BYTE mu_lamp_timeout_loops;
extern BYTE mu_flags;

# 289
BYTE ReadADChannel( BYTE channel );

extern long_u mid;

extern BYTE mu_lamp_min_cnt;

# 41 "..\..\Common\include\eeprom.h"
typedef struct {
BYTE warm_boot;
BYTE valid_img_u8;
BYTE wdog_resets;
BYTE bl_ver;
BYTE app_ver_u8;
BYTE tx_hw_power_u8;
BYTE lamp_mode;
BYTE d7;

BYTE warm_boot_sec;

} EeSharedDataTSt;

# 36 "..\..\Common\include\wait.h"
void delay_us_old( ushort us );
void delay_ms( ushort ms );
void delay_uhf_ts( BYTE ts );


extern void Wait250Us(void);
extern void Wait25Us(void);
extern void Wait5500Us(void);

# 71 "..\..\Common\include\uhf_pkt.h"
typedef struct {
BYTE mark;
BYTE no_slt :3;
BYTE type :4;
BYTE ms :1;

bid_u bid;
BYTE cur_grp :7;
BYTE reserv :1;
BYTE no_grp_u3 :3;
BYTE ext :3;
BYTE ext_reserv :2;
short_u sum_u;
} UHF_BI_s;

# 104
typedef struct {
BYTE mark;
BYTE ext :3;
BYTE type :4;
BYTE ms :1;
long_u mid;
short_u sum_u;
} UHF_BIRC_s;



typedef struct {
BYTE mark;
BYTE ext :3;
BYTE type :4;
BYTE ms :1;
long_u mid;
BYTE ext_data;
short_u sum_u;
} UHF_BIRC_E_s;



typedef struct {
BYTE mark;
BYTE ext :3;
BYTE type :4;
BYTE ms :1;
bid_u bid;
long_u mid;
short_u sum_u;
} UHF_II_s;

typedef struct {
BYTE ack :1;
BYTE gas_alarm :1;
BYTE bat_error :1;
BYTE type :4;
BYTE ms :1;
} bir_cmd_s;

# 151
typedef struct {
BYTE mark;

# 160
union{
bir_cmd_s c;
BYTE b;
}cmd;

long_u mid;
short_u sum_u;
} UHF_BIR_s;



typedef struct {
BYTE mark;
BYTE gmsk_u3 :3;
BYTE type :4;
BYTE ms :1;
BYTE type_ctl;
short_u sidx;
BYTE grp_u8;
short_u sum_u;
} UhfCtrlSearchCTSt;



typedef struct {
BYTE mark;
BYTE :3;
BYTE type :4;
BYTE ms :1;
BYTE type_ctl;
long_u mid;
short_u sum_u;
} UhfCtrlQueryCTSt;




typedef struct {
BYTE mark;
BYTE :3;
BYTE type :4;
BYTE ms :1;
BYTE type_ctl;
long_u mid;
BYTE state;
BYTE wdog_resets;
BYTE vers_boot;
BYTE vers;
short_u sum_u;
} UhfCtrlSearchQueryRTSt;



typedef struct {
BYTE mark;
BYTE :3;
BYTE type :4;
BYTE ms :1;
BYTE type_ctl;
long_u mid;
short_u sum_u;
} UhfCtrlBootModeCTSt;



typedef struct {
BYTE mark;
BYTE :3;
BYTE type :4;
BYTE ms :1;
BYTE type_ctl;
long_u mid;
short_u sum_u;
} UhfCtrlDLInitTSt;



typedef struct {
BYTE mark;
BYTE :3;
BYTE type :4;
BYTE ms :1;

BYTE type_ctl;
BYTE len;
ushort seq;
ushort address;
ushort data[0x20];
short_u sum_u;
} UhfCtrlDLDataTSt;



typedef struct {
BYTE mark;
BYTE :3;
BYTE type :4;
BYTE ms :1;
BYTE type_ctl;
long_u mid;
ushort seq;
short_u sum_u;
} UhfCtrlDLEndCTSt;




typedef struct {
BYTE mark;
BYTE :3;
BYTE type :4;
BYTE ms :1;
BYTE type_ctl;
long_u mid;
ushort test_mode;
short_u sum_u;
} UHF_CRTL_TEST_s;

# 284
typedef struct {
BYTE mark;
BYTE :3;
BYTE type :4;
BYTE ms :1;
BYTE type_ctl;
BYTE status;
short_u sum_u;
} UhfCtrlDLEndRTSt;



typedef struct {
BYTE mark;
BYTE :3;
BYTE type :4;
BYTE ms :1;
BYTE type_ctl;
long_u curr_mid;
ushort data_au16[4];
short_u sum_u;
} UhfCtrlSetIdCTSt;




typedef struct {
BYTE mark;
BYTE :3;
BYTE type :4;
BYTE ms :1;
BYTE type_ctl;
BYTE success;
short_u sum_u;
} UhfCtrlSetIdRTSt;



typedef union {
UHF_BI_s bi;
UHF_BIRC_s birc;
UHF_BIRC_E_s birc_e;
UHF_II_s ii;
UHF_BIR_s bir;

UhfCtrlSearchCTSt csc;
UhfCtrlQueryCTSt cqc;
UhfCtrlSearchQueryRTSt csqr;
UhfCtrlBootModeCTSt cbmc;
UhfCtrlDLInitTSt cdi;
UhfCtrlDLDataTSt cdd;
UhfCtrlDLEndCTSt cdec;
UhfCtrlDLEndRTSt cder;
UhfCtrlSetIdCTSt csic;
UhfCtrlSetIdRTSt csir;
UHF_CRTL_TEST_s ctst;

# 345
BYTE data[sizeof(UhfCtrlDLDataTSt)];

} UhfPktTU;


enum UHF_PKT_TYPES {
UHF_BI_PKT = 0,
UHF_BIRC_PKT,
UHF_II_PKT,

# 358
UHF_CONTROL_PKT = 0x0F
};

enum UHF_CONTROL_TYPES {
UHFC_SEARCH = 0,
UHFC_QUERY,
UHFC_BOOTMODE,
UHFC_3,
UHFC_4,
UHFC_TESTMODE
};

# 403
typedef struct Uhf_pkt_s {

BYTE rxt_state;
BYTE idx;
BYTE len;
BYTE brx_pkt_cnt;
UhfPktTU pkt;

} Uhf_pkt_s;

# 34 "..\..\Common\include\uhf_cmn.h"
enum UHF_RXTX_STATES {
UHF_RXTX_PREAMBLE,
UHF_RXTX_RESYNC,
UHF_RX_HDR,
UHF_RXTX_PKT,
UHF_RX_COMPLETE,
UHF_TX_TRAILER,
UHF_TX_END,
UHF_TX_COMPLETE
};


BYTE UHFCommsInit(void);
BYTE ProcessUHFChar( BYTE ch_u8 );
BYTE SendUHFPacketChar(void);
BYTE CalcUHFChecksum( uchar set_flag );
BYTE get_pkt_len(void);

# 62 "..\include\uhf_comms.h"
extern ushort uhf_registration_timeout;
extern short_u uhf_bonded_bid;
extern short_u uhf_last_bid;

extern bank2 Uhf_pkt_s uhf;

BYTE ProcessUHFPacket(void);

BYTE UHFBusy(void);
extern void TestUHFTx();




extern bank3 bid_u bb[(8)];
extern bank3 bid_u bi[(8)];

# 64 "..\..\Common\include\cc1000.h"
enum UHF_MODES {
UHF_RX_MODE = 0,
UHF_TX_MODE
};

extern BYTE cc1000_rd( BYTE addr );
extern void cc1000_wr( BYTE addr, BYTE val );
extern void LockUHFThresh(void);
extern void UnlockUHFThresh(void);
extern BYTE InitUHFTranceiver(void);
extern BYTE SetUHFMode( BYTE mode );
extern BYTE GetUHFMode(void);

void pager_write( BYTE value );

# 4 "D:\PICC\9.81\include\stdlib.h"
typedef int ptrdiff_t;
typedef unsigned size_t;
typedef unsigned short wchar_t;

# 16
extern int errno;

# 27
typedef struct {
int rem;
int quot;
} div_t;
typedef struct {
unsigned rem;
unsigned quot;
} udiv_t;
typedef struct {
long quot;
long rem;
} ldiv_t;
typedef struct {
unsigned long quot;
unsigned long rem;
} uldiv_t;

# 65
extern double atof(const char *);
extern double strtod(const char *, const char **);
extern int atoi(const char *);
extern unsigned xtoi(const char *);
extern long atol(const char *);
extern long strtol(const char *, char **, int);

extern int rand(void);
extern void srand(unsigned int);
extern void * calloc(size_t, size_t);
extern div_t div(int numer, int denom);
extern udiv_t udiv(unsigned numer, unsigned denom);
extern ldiv_t ldiv(long numer, long denom);
extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
extern unsigned long _lrotl(unsigned long value, unsigned int shift);
extern unsigned long _lrotr(unsigned long value, unsigned int shift);
extern unsigned int _rotl(unsigned int value, unsigned int shift);
extern unsigned int _rotr(unsigned int value, unsigned int shift);

# 106
extern void * malloc(size_t);
extern void free(void *);
extern void * realloc(void *, size_t);

# 122
extern void abort(void);
extern void exit(int);
extern int atexit(void (*)(void));
extern char * getenv(const char *);
extern char ** environ;
extern int system(char *);
extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
extern int abs(int);
extern long labs(long);

# 145
extern char * itoa(char * buf, int val, int base);
extern char * utoa(char * buf, unsigned val, int base);
extern char * ltoa(char * buf, long val, int base);
extern char * ultoa(char * buf, unsigned long val, int base);

# 138 "..\..\Common\include\init30a.h"
void init_board(void);

BYTE ReadADChannel( BYTE channel );

# 74 "..\..\Common\include\vlf_pkt.h"
enum VLF_COMMS_PACKET_TYPES {
VLF_MU_DETECT = 0,
VLF_MU_MASK,
VLF_MU_QUICK_SEARCH_Y,
VLF_MU_QUICK_SEARCH_Z,
VLF_MU_LOCATE,
VLF_MU_VLF_RX_CONTROL,
VLF_MU_QUICK_SEARCH_X,
VLF_MU_TEST,
VLF_MU_MASK_FULL,



VLF_NO_PACKET
};



typedef struct {
BYTE sid;
BYTE seq;
} DetectCommand_P2;



typedef struct {
mid24_s mid_s;
BYTE sid;
BYTE seq;
} MaskCommand_P2;


typedef struct {
mid24_s mid_s;
BYTE timer;
} MaskFullCommand_P3;


typedef struct {
mid24_s mid_s;
BYTE duration;


} LocateCommand_P2;

# 130
typedef struct {
mid24_s mid_s;

union {
struct {
BYTE mobility:4;
BYTE bit5:1;
BYTE bit6:1;
BYTE batteryproblem:1;
BYTE masked:1;
} s ;
BYTE status;
} m ;
} GenericResponse_P2;


typedef struct Pkt_tx_buf_st {
volatile BYTE state;
BYTE cnt;
BYTE idx;
BYTE shifter;
BYTE seq;
BYTE sid;
BYTE type;
union {
BYTE data[8];
DetectCommand_P2 det_cmd;
LocateCommand_P2 loc_cmd;
MaskCommand_P2 msk_cmd;
MaskFullCommand_P3 msk_full_cmd;
GenericResponse_P2 responce;
} u;
} Pkt_tx_buf_st;


typedef struct Pkt_rx_buf_st {
volatile BYTE state;
BYTE cnt;
BYTE len;
BYTE *ptr;
BYTE shifter;
ushort preamble_score;
ushort prev_preamble_score;
BYTE score;
BYTE unlocked;

BYTE preamble[12*(4)];

} Pkt_rx_buf_st;


extern const BYTE uncoded_rx_data_size[];

# 37 "..\include\vlf_comms.h"
extern const BYTE su2mu_preamble[12];
extern const BYTE mu2su_preamble[8];

extern bank1 struct Pkt_tx_buf_st vtx;
extern bank1 Pkt_rx_buf_st vrx;
extern volatile BYTE vlf_state;

# 66
enum VLF_STATE {
VLF_STATE_IDLE,
VLF_STATE_READBIT,
VLF_STATE_PACKET_TRANSMITTED
};


enum VLF_RX_STATES {
VLF_RX_SEEKING,
VLF_RX_LOCKED,
VLF_RX_RECEIVING,
VLF_PACKET_READY
};


enum TX_STATE {
VLF_TX_IDLE,
VLF_TX_LOCATE,
VLF_TX_PACKET_PREAMBLE,
VLF_TX_PACKET_TYPE,
VLF_TX_PACKET_DATA,
VLF_TX_PACKET_DONE
};

# 112
extern bank1 BYTE sid;


BYTE VLF_Busy(void);
void VLF_SendGeneric(void);

extern void VLF_StartReceiver(void);
extern void VLF_StopReceiver(void);
extern char VLF_ProcessBitRead(void);
extern void VLF_ReplyToBroadcastRequest( BYTE intervals );

extern BYTE VLF_ProcessPacket(void);
extern void VLF_ReplyLocateRequest( uchar locate_seconds );

# 42 "D:\Work_PIC\HPT2\Application\src\uhf_comms.c"
bank2 Uhf_pkt_s uhf;

ushort uhf_registration_timeout;

bank3 bid_u bb[(8)];
bank3 bid_u bi[(8)];

bank3 BYTE bl_version = 0;

static ushort uhf_ctrl_sidx = 0;
static BYTE uhf_ctrl_sctr = 0;

static void SendUHFPkt( void );




static void PrepareSearchQueryReply(void)
{
uhf.pkt.csqr.mid = mid;

if( ( mu_lamp_state == LAMP_NORMAL_STATE )&&( mu_flags & (0x04) ) )
uhf.pkt.csqr.state = LAMP_INVERT_STATE;
else
uhf.pkt.csqr.state = mu_lamp_state;

# 73
uhf.pkt.csqr.wdog_resets = eeprom_read( ((BYTE)(&((EeSharedDataTSt*)0)->wdog_resets)) );

# 81
uhf.pkt.csqr.vers_boot = bl_version;

# 85
uhf.pkt.csqr.vers = 0x12;

}

# 94
BYTE UHFBusy(void)
{
if( uhf.rxt_state == UHF_RXTX_PREAMBLE )
return( 0 );

return( 1 );
}

# 106
BYTE ProcessUHFPacket(void)
{

if( uhf.pkt.bi.ms == 1 )
{ if( CalcUHFChecksum( 0 ) )
{ CREN = 1;
RCIE = 1;
return( 1 );
}
}
else
{ CREN = 1;
RCIE = 1;
return( (0) );
}




switch( uhf.pkt.bi.type )
{

case UHF_BI_PKT:

# 143
if( uhf.pkt.bi.ext &&( ( mu_flags & (0x10) ) == 0 ) )
{ mu_flags |= (0x10);
bb[uhf.pkt.bi.bid.ho.lo & ( ((8)) - 1 )].w = 0;
}

if( bb[uhf.pkt.bi.bid.ho.lo & ( ((8)) - 1 )].w != uhf.pkt.bi.bid.w )
{

# 155
if( uhf.pkt.bi.cur_grp ==
( mid.b[3] &( (1 << uhf.pkt.bi.no_grp_u3)-1)) )
{

bi[uhf.pkt.bi.bid.ho.lo & ( ((8)) - 1 )].w = uhf.pkt.bi.bid.w;

switch( uhf.pkt.bi.ext )
{


case 1:

if( mu_lamp_state <= LAMP_NORMAL_STATE )
{ mu_lamp_state = LAMP_PAGER_CALL_1;
mu_lamp_timeout = (timer.cnt + ((ushort)( 5*(( 8 ) * 8))));
mu_flags |= (0x08);
}
break;

case 2:

if( mu_lamp_state >= LAMP_PAGER_ALARM )
{ mu_lamp_state = LAMP_PAGER_ALARM;
mu_lamp_timeout = (timer.cnt + ((ushort)(60*(15.2588))));
mu_flags |= (0x08);
}
break;

case 3:

mu_flags |= (0x08);
break;



}

# 196
delay_uhf_ts( (BYTE)( rand() &( (1 << uhf.pkt.bi.no_slt ) - 1 ) ) );
uhf.pkt.bir.mid = mid;

uhf.pkt.bir.cmd.b = (UHF_BI_PKT<<3);
if( mu_flags & (0x08) )
uhf.pkt.bir.cmd.b |= (1);

uhf_registration_timeout = (timer.cnt + ((3*60*(15.2588))));
mu_flags |= ((0x01)|(0x02));
}
}

break;



case UHF_BIRC_PKT:




if( uhf.pkt.birc.mid.w == mid.w )
{ ushort bid;
{

char i;
for( i=0; i<(8); i++ )
{ bid_u bid_cur;
bid_cur.w = bi[i].w;
if( bid_cur.w )
bb[i].w = bid = bid_cur.w;
}
}

bid = ( ( (bid) >> 8 )|( (bid) << 8 ) ) & 0x0FFF;

# 255
if( uhf.pkt.birc.ext == 1 )
{
if( mu_lamp_state == LAMP_NORMAL_STATE )
{ mu_lamp_state = LAMP_PAGER_CALL_1;
mu_lamp_timeout = (timer.cnt + ((ushort)( 5*(( 8 ) * 8))));
}
}



if( ( bid <= 4 )||( ( bid >= 8 )&&( bid <= 12 ) ) )
uhf_registration_timeout = (timer.cnt + ((3*60*(15.2588)) * 4));
else
uhf_registration_timeout = (timer.cnt + ((3*60*(15.2588))));


mu_flags |= (0x02);
mu_flags &= (~(0x08));

}
break;


case UHF_II_PKT:

# 286
if( uhf.pkt.ii.mid.w == mid.w )
{
uhf.pkt.bir.mid = mid;


uhf_registration_timeout = (timer.cnt + ((3*60*(15.2588))));

# 299
switch( uhf.pkt.ii.ext )
{
case 1:
mu_flags |= ((0x20)|(0x01));
break;

# 314
case 7:
if( mu_lamp_state == LAMP_NORMAL_STATE )
{ mu_lamp_state = LAMP_PAGER_CALL_1;
mu_lamp_timeout = (timer.cnt + ((ushort)( 5*(( 8 ) * 8))));
}
mu_flags |= (0x01);
break;

default:

mu_flags |= (0x01);

}
uhf.pkt.bir.cmd.b = (UHF_II_PKT<<3);

}
break;

# 490
case UHF_CONTROL_PKT:

switch( uhf.pkt.cqc.type_ctl )
{
case UHFC_SEARCH:




if( uhf_ctrl_sidx != uhf.pkt.csc.sidx.w )
{ uhf_ctrl_sidx = uhf.pkt.csc.sidx.w;
uhf_ctrl_sctr = 0;
}


if( ( uhf_ctrl_sctr < 7 )




)
{ uhf_ctrl_sctr++;

delay_uhf_ts( (BYTE)rand() );
PrepareSearchQueryReply();
mu_flags |= (0x01);
}
break;



case UHFC_QUERY:



if( uhf.pkt.cqc.mid.w == mid.w )
{ PrepareSearchQueryReply();
mu_flags |= (0x01);
}
break;


case UHFC_BOOTMODE:



if( uhf.pkt.cbmc.mid.w == mid.w )
{ (GIE = 0);
do{ while(WR)continue;EEADR=(((BYTE)(&((EeSharedDataTSt*)0)->warm_boot)));EEDATA=(1); EECON1&=0x3F;CARRY=0;if(GIE)CARRY=1;GIE=0; WREN=1;EECON2=0x55;EECON2=0xAA;WR=1;WREN=0; if(CARRY)GIE=1; }while(0);
SWDTEN = 1;
for( ; ; );
}
break;



case UHFC_TESTMODE:

if( uhf.pkt.ctst.mid.w == mid.w )
{
switch( uhf.pkt.ctst.test_mode )
{
case 0x8000:
if( mu_lamp_state == LAMP_TEST_STATE )
mu_lamp_state = LAMP_NORMAL_STATE;



RB7 = 0;

mu_flags |= (0x01);
break;

case 0x8001:

mu_lamp_state = LAMP_TEST_STATE;



RB7 = 1;

mu_flags |= (0x01);
break;

# 583
}

if( mu_flags & (0x01) )
{ uhf.pkt.cqc.type_ctl = UHFC_QUERY;
PrepareSearchQueryReply();
}
}
}
break;
}

if( mu_flags & (0x01) )
{ SendUHFPkt();
mu_flags &= (~(0x01));
}
else
{ CREN = 1;
RCIE = 1;
}




return( (0) );
}




static void SendUHFPkt(void)
{

# 628
uhf.rxt_state = UHF_RXTX_PREAMBLE;
uhf.idx = 0;


if( SetUHFMode( UHF_TX_MODE ) )
{
mu_lamp_state = LAMP_POST_ERROR;
mu_lamp_timeout = (timer.cnt + (32000));

}

uhf.pkt.data[0] = 0x5A;
uhf.pkt.data[1] &= (~0x80);

CalcUHFChecksum( 1 );

TXEN = 1;
TXIE = 1;
}

