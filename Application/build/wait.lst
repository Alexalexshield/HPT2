

HI-TECH Software PICC Macro Assembler V9.60PL3 build 3862 
                                                      Tue Feb 04 13:05:11 2020

HI-TECH Software Code Generator build 3862
     1                           	processor	16F887
     2                           	opt	pw 79
     3                           	psect	text0,local,class=CODE,delta=2
     4                           	psect	text1,local,class=CODE,delta=2
     5                           	psect	text2,local,class=CODE,delta=2
     6                           	psect	text3,local,class=CODE,delta=2
     7                           	psect	text4,local,class=CODE,delta=2
     8                           	psect	temp,global,ovrld,class=BANK0,space=1,de
      +                          lta=1
     9  0000                     
    10  0000                     
    11  0000                     
    12  0000                     
    13  0000                     
    14  0000                     
    15  0000                     
    16  0000                     
    17  0000                     
    18  0000                     
    19  0000                     
    20                           
    21                           	psect	text0
    22  0891                     _delay_uhf_ts
    23                           ;	_ts assigned to ?a_delay_uhf_ts+0
    24  0000                     _delay_uhf_ts$ts	set	?a_delay_uhf_ts
    25                           ;	_us assigned to ?a_delay_uhf_ts+1
    26  0000                     _delay_uhf_ts$us	set	?a_delay_uhf_ts+1
    27                           ;	_tmr assigned to ?a_delay_uhf_ts+3
    28  0000                     _delay_uhf_ts$tmr	set	?a_delay_uhf_ts+3
    29                           ;_ts stored from w
    30  0891  0183               	clrf	3	;select bank 0
    31  0892  00C4               	movwf	?a_delay_uhf_ts
    32                           ;wait.c: 57: void delay_uhf_ts( BYTE ts )
    33  0893  28E3               	goto	l33
    34  0894                     l38
    35                           ;wait.c: 63: {
    36  0894  080F               	movf	15,w	;volatile
    37  0895  00C7               	movwf	?a_delay_uhf_ts+3
    38  0896  01C8               	clrf	?a_delay_uhf_ts+4
    39                           ;wait.c: 65: tmr = tmr<<8 | TMR1L;
    40  0897  00F5               	movwf	btemp+1
    41  0898  01F4               	clrf	btemp
    42  0899  080E               	movf	14,w	;volatile
    43  089A  0474               	iorwf	btemp,w
    44  089B  00C7               	movwf	?a_delay_uhf_ts+3
    45  089C  0875               	movf	btemp+1,w
    46  089D  00C8               	movwf	?a_delay_uhf_ts+4
    47                           ;wait.c: 66: }while( TMR1H != (BYTE)(tmr>>8) );
    48  089E  060F               	xorwf	15,w	;volatile
    49  089F  1D03               	btfss	3,2
    50  08A0  2894               	goto	l38
    51                           ;wait.c: 68: us = tmr + ( 5500 - 34 );
    52  08A1  305A               	movlw	90
    53  08A2  0747               	addwf	?a_delay_uhf_ts+3,w
    54  08A3  00C5               	movwf	?a_delay_uhf_ts+1
    55  08A4  3015               	movlw	21
    56  08A5  1803               	btfsc	3,0
    57  08A6  3016               	movlw	22
    58  08A7  0748               	addwf	?a_delay_uhf_ts+4,w
    59  08A8  00C6               	movwf	?a_delay_uhf_ts+2
    60                           ;wait.c: 70: asm("clrwdt");
    61  08A9  0064               	clrwdt	;#
    62  08AA                     l39
    63                           ;wait.c: 72: for( ; ; )
    64                           ;wait.c: 73: {
    65  08AA  0846               	movf	?a_delay_uhf_ts+2,w
    66  08AB  0248               	subwf	?a_delay_uhf_ts+4,w
    67  08AC  1D03               	btfss	3,2
    68  08AD  28B0               	goto	u25
    69  08AE  0845               	movf	?a_delay_uhf_ts+1,w
    70  08AF  0247               	subwf	?a_delay_uhf_ts+3,w
    71  08B0                     u25
    72  08B0  1C03               	btfss	3,0
    73  08B1  28C4               	goto	l42
    74                           ;wait.c: 75: { if( ( tmr - us ) < 0x8000 )
    75  08B2  0848               	movf	?a_delay_uhf_ts+4,w
    76  08B3  00F5               	movwf	btemp+1
    77  08B4  0847               	movf	?a_delay_uhf_ts+3,w
    78  08B5  00F4               	movwf	btemp
    79  08B6  0845               	movf	?a_delay_uhf_ts+1,w
    80  08B7  02F4               	subwf	btemp
    81  08B8  1C03               	btfss	3,0
    82  08B9  03F5               	decf	btemp+1
    83  08BA  0846               	movf	?a_delay_uhf_ts+2,w
    84  08BB  02F5               	subwf	btemp+1
    85  08BC  3080               	movlw	128
    86  08BD  0275               	subwf	btemp+1,w
    87  08BE  3000               	movlw	0
    88  08BF  1903               	btfsc	3,2
    89  08C0  0274               	subwf	btemp,w
    90  08C1  1C03               	btfss	3,0
    91  08C2  28E3               	goto	l33
    92  08C3  28D5               	goto	l48
    93                           ;wait.c: 76: break;
    94                           ;wait.c: 77: }
    95  08C4                     l42
    96                           ;wait.c: 78: else
    97  08C4  0846               	movf	?a_delay_uhf_ts+2,w
    98  08C5  00F5               	movwf	btemp+1
    99  08C6  0845               	movf	?a_delay_uhf_ts+1,w
   100  08C7  00F4               	movwf	btemp
   101  08C8  0847               	movf	?a_delay_uhf_ts+3,w
   102  08C9  02F4               	subwf	btemp
   103  08CA  1C03               	btfss	3,0
   104  08CB  03F5               	decf	btemp+1
   105  08CC  0848               	movf	?a_delay_uhf_ts+4,w
   106  08CD  02F5               	subwf	btemp+1
   107  08CE  3080               	movlw	128
   108  08CF  0275               	subwf	btemp+1,w
   109  08D0  3001               	movlw	1
   110  08D1  1903               	btfsc	3,2
   111  08D2  0274               	subwf	btemp,w
   112  08D3  1803               	btfsc	3,0
   113  08D4  28E3               	goto	l33
   114                           ;wait.c: 80: break;
   115  08D5                     l48
   116                           ;wait.c: 81: }
   117  08D5  080F               	movf	15,w	;volatile
   118  08D6  00C7               	movwf	?a_delay_uhf_ts+3
   119  08D7  01C8               	clrf	?a_delay_uhf_ts+4
   120                           ;wait.c: 84: tmr = tmr<<8 | TMR1L;
   121  08D8  00F5               	movwf	btemp+1
   122  08D9  01F4               	clrf	btemp
   123  08DA  080E               	movf	14,w	;volatile
   124  08DB  0474               	iorwf	btemp,w
   125  08DC  00C7               	movwf	?a_delay_uhf_ts+3
   126  08DD  0875               	movf	btemp+1,w
   127  08DE  00C8               	movwf	?a_delay_uhf_ts+4
   128                           ;wait.c: 85: }while( TMR1H != (BYTE)(tmr>>8) );
   129  08DF  060F               	xorwf	15,w	;volatile
   130  08E0  1903               	btfsc	3,2
   131  08E1  28AA               	goto	l39
   132  08E2  28D5               	goto	l48
   133                           ;wait.c: 87: }
   134  08E3                     l33
   135  08E3  1283               	bcf	3,5
   136  08E4  1303               	bcf	3,6	;carry unused
   137  08E5  03C4               	decf	?a_delay_uhf_ts
   138  08E6  0F44               	incfsz	?a_delay_uhf_ts,w
   139  08E7  2894               	goto	l38
   140  08E8  0008               	return
   141                           
   142                           	psect	text1
   143  083F                     __end_of_delay_uhf_ts
   144                           ;       param _ms assigned to ?_delay_ms+0
   145  0000                     _delay_ms$ms	set	?_delay_ms
   146  083F                     _delay_ms
   147                           ;	_us assigned to ?a_delay_ms+0
   148  0000                     _delay_ms$us	set	?a_delay_ms
   149                           ;	_t assigned to ?a_delay_ms+2
   150  0000                     _delay_ms$t	set	?a_delay_ms+2
   151                           ;wait.c: 95: void delay_ms( ushort ms )
   152  083F  2885               	goto	l50
   153  0840                     l55
   154                           ;wait.c: 101: {
   155  0840  080F               	movf	15,w	;volatile
   156  0841  00CB               	movwf	?a_delay_ms+3
   157                           ;wait.c: 103: t.dat.lo = TMR1L;
   158  0842  080E               	movf	14,w	;volatile
   159  0843  00CA               	movwf	?a_delay_ms+2
   160                           ;wait.c: 104: }while( TMR1H != t.dat.hi );
   161  0844  084B               	movf	?a_delay_ms+3,w
   162  0845  060F               	xorwf	15,w	;volatile
   163  0846  1D03               	btfss	3,2
   164  0847  2840               	goto	l55
   165                           ;wait.c: 106: asm("clrwdt");
   166  0848  0064               	clrwdt	;#
   167                           ;wait.c: 107: us = t.cnt + ( 1000 - 34 );
   168  0849  30C6               	movlw	198
   169  084A  074A               	addwf	?a_delay_ms+2,w
   170  084B  00C8               	movwf	?a_delay_ms
   171  084C  3003               	movlw	3
   172  084D  1803               	btfsc	3,0
   173  084E  3004               	movlw	4
   174  084F  074B               	addwf	?a_delay_ms+3,w
   175  0850  00C9               	movwf	?a_delay_ms+1
   176  0851                     l56
   177                           ;wait.c: 108: for( ; ; )
   178                           ;wait.c: 109: { if( t.cnt >= us )
   179  0851  0849               	movf	?a_delay_ms+1,w
   180  0852  024B               	subwf	?a_delay_ms+3,w
   181  0853  1D03               	btfss	3,2
   182  0854  2857               	goto	u85
   183  0855  0848               	movf	?a_delay_ms,w
   184  0856  024A               	subwf	?a_delay_ms+2,w
   185  0857                     u85
   186  0857  1C03               	btfss	3,0
   187  0858  286B               	goto	l59
   188                           ;wait.c: 110: { if( ( t.cnt - us ) < 0x8000 )
   189  0859  084B               	movf	?a_delay_ms+3,w
   190  085A  00F5               	movwf	btemp+1
   191  085B  084A               	movf	?a_delay_ms+2,w
   192  085C  00F4               	movwf	btemp
   193  085D  0848               	movf	?a_delay_ms,w
   194  085E  02F4               	subwf	btemp
   195  085F  1C03               	btfss	3,0
   196  0860  03F5               	decf	btemp+1
   197  0861  0849               	movf	?a_delay_ms+1,w
   198  0862  02F5               	subwf	btemp+1
   199  0863  3080               	movlw	128
   200  0864  0275               	subwf	btemp+1,w
   201  0865  3000               	movlw	0
   202  0866  1903               	btfsc	3,2
   203  0867  0274               	subwf	btemp,w
   204  0868  1C03               	btfss	3,0
   205  0869  2885               	goto	l50
   206  086A  287C               	goto	l65
   207                           ;wait.c: 111: break;
   208                           ;wait.c: 112: }
   209  086B                     l59
   210                           ;wait.c: 113: else
   211  086B  0849               	movf	?a_delay_ms+1,w
   212  086C  00F5               	movwf	btemp+1
   213  086D  0848               	movf	?a_delay_ms,w
   214  086E  00F4               	movwf	btemp
   215  086F  084A               	movf	?a_delay_ms+2,w
   216  0870  02F4               	subwf	btemp
   217  0871  1C03               	btfss	3,0
   218  0872  03F5               	decf	btemp+1
   219  0873  084B               	movf	?a_delay_ms+3,w
   220  0874  02F5               	subwf	btemp+1
   221  0875  3080               	movlw	128
   222  0876  0275               	subwf	btemp+1,w
   223  0877  3001               	movlw	1
   224  0878  1903               	btfsc	3,2
   225  0879  0274               	subwf	btemp,w
   226  087A  1803               	btfsc	3,0
   227  087B  2885               	goto	l50
   228                           ;wait.c: 115: break;
   229  087C                     l65
   230                           ;wait.c: 116: }
   231  087C  080F               	movf	15,w	;volatile
   232  087D  00CB               	movwf	?a_delay_ms+3
   233                           ;wait.c: 119: t.dat.lo = TMR1L;
   234  087E  080E               	movf	14,w	;volatile
   235  087F  00CA               	movwf	?a_delay_ms+2
   236                           ;wait.c: 120: }while( TMR1H != t.dat.hi );
   237  0880  084B               	movf	?a_delay_ms+3,w
   238  0881  060F               	xorwf	15,w	;volatile
   239  0882  1903               	btfsc	3,2
   240  0883  2851               	goto	l56
   241  0884  287C               	goto	l65
   242                           ;wait.c: 122: }
   243  0885                     l50
   244  0885  1283               	bcf	3,5
   245  0886  1303               	bcf	3,6	;carry unused
   246  0887  0846               	movf	?_delay_ms,w
   247  0888  1903               	btfsc	3,2
   248  0889  03C7               	decf	?_delay_ms+1
   249  088A  03C6               	decf	?_delay_ms
   250  088B  0A46               	incf	?_delay_ms,w
   251  088C  1903               	btfsc	3,2
   252  088D  0A47               	incf	?_delay_ms+1,w
   253  088E  1903               	btfsc	3,2
   254  088F  0008               	return
   255  0890  2840               	goto	l55
   256                           
   257                           	psect	text2
   258  154C                     __end_of_delay_ms
   259  154C                     _Wait250Us
   260                           ;	_dcnt assigned to ?a_Wait250Us+0
   261  0000                     _Wait250Us$dcnt	set	?a_Wait250Us
   262                           ;wait.c: 157: void Wait250Us()
   263  154C  307D               	movlw	125
   264  154D  0183               	clrf	3	;select bank 0
   265  154E  00C5               	movwf	?a_Wait250Us	;volatile
   266                           ;wait.c: 160: while(dcnt-- != 0);
   267  154F                     l67
   268  154F  03C5               	decf	?a_Wait250Us	;volatile
   269  1550  0F45               	incfsz	?a_Wait250Us,w	;volatile
   270  1551  2D4F               	goto	l67
   271  1552  0008               	return
   272                           
   273                           	psect	text3
   274  1540                     __end_of_Wait250Us
   275  1540                     _Wait25Us
   276                           ;	_dcnt assigned to ?a_Wait25Us+0
   277  0000                     _Wait25Us$dcnt	set	?a_Wait25Us
   278                           ;wait.c: 189: void Wait25Us(void)
   279  1540  300D               	movlw	13
   280  1541  0183               	clrf	3	;select bank 0
   281  1542  00C5               	movwf	?a_Wait25Us	;volatile
   282                           ;wait.c: 192: while( --dcnt != 0 );
   283  1543                     l71
   284  1543  0BC5               	decfsz	?a_Wait25Us	;volatile
   285  1544  2D43               	goto	l71
   286  1545  0008               	return
   287                           
   288                           	psect	text4
   289  07FE                     __end_of_Wait25Us
   290  0000                     
   291  0000                     
   292  0000                     
   293  0000                     
   294  0000                     
   295  0000                     
   296  0000                     
   297  0000                     
   298  0000                     
   299  0000                     
   300  0000                     
   301  0000                     
   302  0000                     
   303  0000                     
   304  0000                     
   305  0000                     
   306  0000                     
   307  0000                     
   308  0000                     
   309  0000                     
   310  0000                     
   311  0000                     
   312  0000                     
   313  0000                     
   314  0000                     
   315  0000                     
   316  0000                     
   317  0000                     
   318  0000                     
   319  0000                     
   320  0000                     
   321  0000                     
   322  0000                     
   323  0000                     
   324  0000                     
   325  0000                     
   326  0000                     
   327  0000                     
   328  0000                     
   329  0000                     
   330  0000                     
   331  0000                     
   332  0000                     
   333  0000                     
   334  0000                     
   335  0000                     
   336  0000                     
   337  0000                     
   338  0000                     
   339  0000                     
   340  0000                     
   341  0000                     
   342  0000                     
   343  0000                     
   344  0000                     
   345  0000                     
   346  0000                     
   347  0000                     
   348  0000                     
   349  0000                     
   350  0000                     
   351  0000                     
   352  0000                     
   353  0000                     
   354  0000                     
   355  0000                     
   356  0000                     
   357  0000                     
   358  0000                     
   359  0000                     
   360  0000                     
   361  0000                     
   362  0000                     
   363  0000                     
   364  0000                     
   365  0000                     
   366  0000                     
   367  0000                     
   368  0000                     
   369  0000                     
   370  0000                     
   371  0000                     
   372  0000                     
   373  0000                     
   374  0000                     
   375  0000                     
   376  0000                     
   377  0000                     
   378  0000                     
   379  0000                     
   380  0000                     
   381  0000                     
   382  0000                     
   383  0000                     
   384  0000                     
   385  0000                     
   386  0000                     
   387  0000                     
   388  0000                     
   389  0000                     
   390  0000                     
   391  0000                     
   392  0000                     
   393  0000                     
   394  0000                     
   395  0000                     
   396  0000                     
   397  0000                     
   398  0000                     
   399  0000                     
   400  0000                     
   401  0000                     
   402  0000                     
   403  0000                     
   404  0000                     
   405  0000                     
   406  0000                     
   407  0000                     
   408  0000                     
   409  0000                     
   410  0000                     
   411  0000                     
   412  0000                     
   413  0000                     
   414  0000                     
   415  0000                     
   416  0000                     
   417  0000                     
   418  0000                     
   419  0000                     
   420  0000                     
   421  0000                     
   422  0000                     
   423  0000                     
   424  0000                     
   425  0000                     
   426  0000                     
   427  0000                     
   428  0000                     
   429  0000                     
   430  0000                     
   431  0000                     
   432  0000                     
   433  0000                     
   434  0000                     
   435  0000                     
   436  0000                     
   437  0000                     
   438  0000                     
   439  0000                     
   440  0000                     
   441  0000                     
   442  0000                     
   443  0000                     
   444  0000                     
   445  0000                     
   446  0000                     
   447  0000                     
   448  0000                     
   449  0000                     
   450  0000                     
   451  0000                     
   452  0000                     
   453  0000                     
   454  0000                     
   455  0000                     
   456  0000                     
   457  0000                     
   458  0000                     
   459  0000                     
   460  0000                     
   461  0000                     
   462  0000                     
   463  0000                     
   464  0000                     
   465  0000                     
   466  0000                     
   467  0000                     
   468  0000                     
   469  0000                     
   470  0000                     
   471  0000                     
   472  0000                     
   473  0000                     
   474  0000                     
   475  0000                     
   476  0000                     
   477  0000                     
   478  0000                     
   479  0000                     
   480  0000                     
   481  0000                     
   482  0000                     
   483  0000                     
   484  0000                     
   485  0000                     
   486  0000                     
   487  0000                     
   488  0000                     
   489  0000                     
   490  0000                     
   491  0000                     
   492  0000                     
   493  0000                     
   494  0000                     
   495  0000                     
   496  0000                     
   497  0000                     
   498  0000                     
   499  0000                     
   500  0000                     
   501  0000                     
   502  0000                     
   503  0000                     
   504  0000                     
   505  0000                     
   506  0000                     
   507  0000                     
   508  0000                     
   509  0000                     
   510  0000                     
   511  0000                     
   512  0000                     
   513  0000                     
   514  0000                     
   515  0000                     
   516  0000                     
   517  0000                     
   518  0000                     
   519  0000                     
   520  0000                     
   521  0000                     
   522  0000                     
   523  0000                     
   524  0000                     
   525  0000                     
   526  0000                     
   527  0000                     
   528  0000                     
   529  0000                     
   530  0000                     
   531  0000                     
   532  0000                     
   533  0000                     
   534  0000                     
   535  0000                     
   536  0000                     
   537  0000                     
   538  0000                     
   539  0000                     
   540  0000                     
   541  0000                     
   542  0000                     
   543  0000                     
   544  0000                     
   545  0000                     
   546  0000                     
   547  0000                     
   548  0000                     
   549  0000                     
   550  0000                     
   551  0000                     
   552  0000                     
   553  0000                     
   554  0000                     
   555  0000                     
   556  0000                     
   557  0000                     
   558  0000                     
   559  0000                     
   560  0000                     
   561  0000                     
   562  0000                     
   563  0000                     
   564  0000                     
   565  0000                     
   566  0000                     
   567  0000                     
   568  0000                     
   569  0000                     
   570  0000                     
   571  0000                     
   572  0000                     
   573  0000                     
   574  0000                     
   575  0000                     
   576  0000                     
   577  0000                     
   578  0000                     
   579  0000                     
   580  0000                     
   581  0000                     
   582  0000                     
   583  0000                     
   584  0000                     
   585  0000                     
   586  0000                     
   587  0000                     
   588  0000                     
   589  0000                     
   590  0000                     
   591  0000                     
   592  0000                     
   593  0000                     
   594  0000                     
   595  0000                     
   596  0000                     
   597  0000                     
   598  0000                     
   599  0000                     
   600  0000                     
   601  0000                     
   602  0000                     
   603  0000                     
   604  0000                     
   605  0000                     
   606  0000                     
   607  0000                     
   608  0000                     
   609  0000                     
   610  0000                     
   611  0000                     
   612  0000                     
   613  0000                     
   614  0000                     
   615  0000                     
   616  0000                     
   617  0000                     
   618  0000                     
   619  0000                     
   620  0000                     
   621  0000                     
   622  0000                     
   623  0000                     
   624  0000                     
   625  0000                     
   626  0000                     
   627  0000                     
   628  0000                     
   629  0000                     
   630  0000                     
   631  0000                     
   632  0000                     
   633  0000                     
   634  0000                     
   635  0000                     
   636  0000                     
   637  0000                     
   638  0000                     
   639  0000                     
   640  0000                     
   641  0000                     
   642  0000                     
   643  0000                     
   644  0000                     
   645  0000                     
   646  0000                     
   647  0000                     
   648  0000                     
   649  0000                     
   650  0000                     
   651  0000                     
   652  0000                     
   653  0000                     
   654  0000                     
   655  0000                     
   656  0000                     
   657  0000                     
   658  0000                     
   659  0000                     
   660  0000                     
   661  0000                     
   662  0000                     
   663  0000                     
   664  0000                     
   665  0000                     
   666  0000                     
   667  0000                     
   668  0000                     
   669  0000                     
   670  0000                     
   671  0000                     
   672  0000                     
   673  0000                     
   674  0000                     
   675  0000                     
   676  0000                     
   677  0000                     
   678  0000                     
   679  0000                     
   680  0000                     
   681  0000                     
   682  0000                     
   683  0000                     
   684  0000                     
   685  0000                     
   686  0000                     
   687  0000                     
   688  0000                     
   689  0000                     
   690  0000                     
   691  0000                     
   692  0000                     
   693  0000                     
   694  0000                     
   695  0000                     
   696  0000                     
   697  0000                     
   698  0000                     
   699  0000                     
   700  0000                     
   701  0000                     
   702  0000                     
   703  0000                     
   704  0000                     
   705  0000                     
   706  0000                     
   707                           
   708                           	psect	temp
   709  0074                     btemp
                     btemp
   710  0074                     	ds	2


HI-TECH Software PICC Macro Assembler V9.60PL3 build 3862 
Symbol Table                                          Tue Feb 04 13:05:11 2020

            _delay_ms 083F                    l33 08E3  
                  l50 0885                    l42 08C4  
                  l38 0894                    l71 1543  
                  l55 0840                    l39 08AA  
                  l56 0851                    l48 08D5  
                  l65 087C                    l67 154F  
                  l59 086B                    u25 08B0  
                  u85 0857        ?a_delay_uhf_ts 0044  
__end_of_delay_uhf_ts 083F            ?a_Wait25Us 0045  
           ?_delay_ms 0046                  btemp 0074  
         ?a_Wait250Us 0045      __end_of_Wait25Us 07FE  
          ?a_delay_ms 0048             _Wait250Us 154C  
        _delay_uhf_ts 0891      __end_of_delay_ms 154C  
               status 0003     __end_of_Wait250Us 1540  
            _Wait25Us 1540            used_btemp0 0001  
          used_btemp1 0001  
