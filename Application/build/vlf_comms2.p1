Version 3.2 HI-TECH Software Intermediate Code
"19 C:\PICC\std\9.60\include\pic16f887.h
[v _INDF `Vuc 1 s@0 ]
"20
[v _TMR0 `Vuc 1 s@1 ]
"21
[v _PCL `Vuc 1 s@2 ]
"22
[v _STATUS `Vuc 1 s@3 ]
"23
[v _FSR `uc 1 s@4 ]
"24
[v _PORTA `Vuc 1 s@5 ]
"25
[v _PORTB `Vuc 1 s@6 ]
"26
[v _PORTC `Vuc 1 s@7 ]
"28
[v _PORTD `Vuc 1 s@8 ]
"30
[v _PORTE `Vuc 1 s@9 ]
"31
[v _PCLATH `Vuc 1 s@10 ]
"32
[v _INTCON `Vuc 1 s@11 ]
"33
[v _PIR1 `Vuc 1 s@12 ]
"34
[v _PIR2 `Vuc 1 s@13 ]
"35
[v _TMR1L `Vuc 1 s@14 ]
"36
[v _TMR1H `Vuc 1 s@15 ]
"37
[v _T1CON `uc 1 s@16 ]
"38
[v _TMR2 `Vuc 1 s@17 ]
"39
[v _T2CON `uc 1 s@18 ]
"40
[v _SSPBUF `Vuc 1 s@19 ]
"41
[v _SSPCON `Vuc 1 s@20 ]
"42
[v _CCPR1L `Vuc 1 s@21 ]
"43
[v _CCPR1H `Vuc 1 s@22 ]
"44
[v _CCP1CON `Vuc 1 s@23 ]
"45
[v _RCSTA `Vuc 1 s@24 ]
"46
[v _TXREG `Vuc 1 s@25 ]
"47
[v _RCREG `Vuc 1 s@26 ]
"48
[v _CCPR2L `Vuc 1 s@27 ]
"49
[v _CCPR2H `Vuc 1 s@28 ]
"50
[v _CCP2CON `Vuc 1 s@29 ]
"51
[v _ADRESH `Vuc 1 s@30 ]
"52
[v _ADCON0 `Vuc 1 s@31 ]
"53
[v _OPTION `Xuc 1 s@129 ]
"54
[v _TRISA `VXuc 1 s@133 ]
"55
[v _TRISB `VXuc 1 s@134 ]
"56
[v _TRISC `VXuc 1 s@135 ]
"58
[v _TRISD `VXuc 1 s@136 ]
"60
[v _TRISE `VXuc 1 s@137 ]
"61
[v _PIE1 `Xuc 1 s@140 ]
"62
[v _PIE2 `Xuc 1 s@141 ]
"63
[v _PCON `VXuc 1 s@142 ]
"64
[v _OSCCON `VXuc 1 s@143 ]
"65
[v _OSCTUNE `Xuc 1 s@144 ]
"66
[v _SSPCON2 `VXuc 1 s@145 ]
"67
[v _PR2 `Xuc 1 s@146 ]
"68
[v _SSPADD `Xuc 1 s@147 ]
"69
[v _SSPMSK `Xuc 1 s@147 ]
"70
[v _SSPSTAT `VXuc 1 s@148 ]
"71
[v _WPUB `Xuc 1 s@149 ]
"72
[v _IOCB `Xuc 1 s@150 ]
"73
[v _VRCON `Xuc 1 s@151 ]
"74
[v _TXSTA `VXuc 1 s@152 ]
"75
[v _SPBRG `Xuc 1 s@153 ]
"76
[v _SPBRGH `Xuc 1 s@154 ]
"77
[v _PWM1CON `VXuc 1 s@155 ]
"78
[v _ECCPAS `VXuc 1 s@156 ]
"79
[v _PSTRCON `VXuc 1 s@157 ]
"80
[v _ADRESL `VXuc 1 s@158 ]
"81
[v _ADCON1 `Xuc 1 s@159 ]
"82
[v _WDTCON `VYuc 1 s@261 ]
"83
[v _CM1CON0 `VYuc 1 s@263 ]
"84
[v _CM2CON0 `VYuc 1 s@264 ]
"85
[v _CM2CON1 `VYuc 1 s@265 ]
"86
[v _EEDAT `VYuc 1 s@268 ]
"88
[v _EEDATA `VYuc 1 s@268 ]
"89
[v _EEADR `Yuc 1 s@269 ]
"91
[v _EEADRL `Yuc 1 s@269 ]
"92
[v _EEDATH `VYuc 1 s@270 ]
"93
[v _EEADRH `Yuc 1 s@271 ]
"94
[v _SRCON `VZuc 1 s@389 ]
"95
[v _BAUDCTL `VZuc 1 s@391 ]
"96
[v _ANSEL `Zuc 1 s@392 ]
"97
[v _ANSELH `Zuc 1 s@393 ]
"98
[v _EECON1 `VZuc 1 s@396 ]
"99
[v _EECON2 `VZuc 1 s@397 ]
"103
[v _CARRY `Vb 1 s@24 ]
"104
[v _DC `Vb 1 s@25 ]
"105
[v _ZERO `Vb 1 s@26 ]
"106
[v _PD `Vb 1 s@27 ]
"107
[v _TO `Vb 1 s@28 ]
"108
[v _RP0 `b 1 s@29 ]
"109
[v _RP1 `b 1 s@30 ]
"110
[v _IRP `b 1 s@31 ]
"113
[v _RA0 `Vb 1 s@40 ]
"114
[v _RA1 `Vb 1 s@41 ]
"115
[v _RA2 `Vb 1 s@42 ]
"116
[v _RA3 `Vb 1 s@43 ]
"117
[v _RA4 `Vb 1 s@44 ]
"118
[v _RA5 `Vb 1 s@45 ]
"119
[v _RA6 `Vb 1 s@46 ]
"120
[v _RA7 `Vb 1 s@47 ]
"123
[v _RB0 `Vb 1 s@48 ]
"124
[v _RB1 `Vb 1 s@49 ]
"125
[v _RB2 `Vb 1 s@50 ]
"126
[v _RB3 `Vb 1 s@51 ]
"127
[v _RB4 `Vb 1 s@52 ]
"128
[v _RB5 `Vb 1 s@53 ]
"129
[v _RB6 `Vb 1 s@54 ]
"130
[v _RB7 `Vb 1 s@55 ]
"133
[v _RC0 `Vb 1 s@56 ]
"134
[v _RC1 `Vb 1 s@57 ]
"135
[v _RC2 `Vb 1 s@58 ]
"136
[v _RC3 `Vb 1 s@59 ]
"137
[v _RC4 `Vb 1 s@60 ]
"138
[v _RC5 `Vb 1 s@61 ]
"139
[v _RC6 `Vb 1 s@62 ]
"140
[v _RC7 `Vb 1 s@63 ]
"144
[v _RD0 `Vb 1 s@64 ]
"145
[v _RD1 `Vb 1 s@65 ]
"146
[v _RD2 `Vb 1 s@66 ]
"147
[v _RD3 `Vb 1 s@67 ]
"148
[v _RD4 `Vb 1 s@68 ]
"149
[v _RD5 `Vb 1 s@69 ]
"150
[v _RD6 `Vb 1 s@70 ]
"151
[v _RD7 `Vb 1 s@71 ]
"154
[v _RE0 `Vb 1 s@72 ]
"155
[v _RE1 `Vb 1 s@73 ]
"156
[v _RE2 `Vb 1 s@74 ]
"158
[v _RE3 `Vb 1 s@75 ]
"161
[v _RBIF `Vb 1 s@88 ]
"163
[v _RABIF `Vb 1 s@88 ]
"164
[v _INTF `Vb 1 s@89 ]
"165
[v _T0IF `Vb 1 s@90 ]
"166
[v _RBIE `b 1 s@91 ]
"168
[v _RABIE `b 1 s@91 ]
"169
[v _INTE `b 1 s@92 ]
"170
[v _T0IE `b 1 s@93 ]
"171
[v _PEIE `b 1 s@94 ]
"172
[v _GIE `b 1 s@95 ]
"175
[v _TMR1IF `Vb 1 s@96 ]
"176
[v _TMR2IF `Vb 1 s@97 ]
"177
[v _CCP1IF `Vb 1 s@98 ]
"178
[v _SSPIF `Vb 1 s@99 ]
"179
[v _TXIF `Vb 1 s@100 ]
"180
[v _RCIF `Vb 1 s@101 ]
"181
[v _ADIF `Vb 1 s@102 ]
"184
[v _CCP2IF `Vb 1 s@104 ]
"185
[v _ULPWUIF `Vb 1 s@106 ]
"186
[v _BCLIF `Vb 1 s@107 ]
"187
[v _EEIF `Vb 1 s@108 ]
"188
[v _C1IF `Vb 1 s@109 ]
"189
[v _C2IF `Vb 1 s@110 ]
"190
[v _OSFIF `Vb 1 s@111 ]
"193
[v _TMR1ON `b 1 s@128 ]
"194
[v _TMR1CS `b 1 s@129 ]
"195
[v _T1SYNC `b 1 s@130 ]
"196
[v _T1OSCEN `b 1 s@131 ]
"197
[v _T1CKPS0 `b 1 s@132 ]
"198
[v _T1CKPS1 `b 1 s@133 ]
"199
[v _TMR1GE `b 1 s@134 ]
"200
[v _T1GINV `b 1 s@135 ]
"203
[v _T2CKPS0 `b 1 s@144 ]
"204
[v _T2CKPS1 `b 1 s@145 ]
"205
[v _TMR2ON `b 1 s@146 ]
"206
[v _TOUTPS0 `b 1 s@147 ]
"207
[v _TOUTPS1 `b 1 s@148 ]
"208
[v _TOUTPS2 `b 1 s@149 ]
"209
[v _TOUTPS3 `b 1 s@150 ]
"212
[v _SSPM0 `b 1 s@160 ]
"213
[v _SSPM1 `b 1 s@161 ]
"214
[v _SSPM2 `b 1 s@162 ]
"215
[v _SSPM3 `b 1 s@163 ]
"216
[v _CKP `b 1 s@164 ]
"217
[v _SSPEN `b 1 s@165 ]
"218
[v _SSPOV `Vb 1 s@166 ]
"219
[v _WCOL `Vb 1 s@167 ]
"222
[v _CCP1M0 `b 1 s@184 ]
"223
[v _CCP1M1 `b 1 s@185 ]
"224
[v _CCP1M2 `b 1 s@186 ]
"225
[v _CCP1M3 `b 1 s@187 ]
"226
[v _DC1B0 `b 1 s@188 ]
"227
[v _DC1B1 `b 1 s@189 ]
"228
[v _P1M0 `b 1 s@190 ]
"229
[v _P1M1 `b 1 s@191 ]
"232
[v _RX9D `Vb 1 s@192 ]
"233
[v _OERR `Vb 1 s@193 ]
"234
[v _FERR `Vb 1 s@194 ]
"235
[v _ADDEN `b 1 s@195 ]
"236
[v _CREN `b 1 s@196 ]
"237
[v _SREN `b 1 s@197 ]
"238
[v _RX9 `b 1 s@198 ]
"239
[v _SPEN `b 1 s@199 ]
"242
[v _CCP2M0 `b 1 s@232 ]
"243
[v _CCP2M1 `b 1 s@233 ]
"244
[v _CCP2M2 `b 1 s@234 ]
"245
[v _CCP2M3 `b 1 s@235 ]
"246
[v _CCP2Y `Vb 1 s@236 ]
"247
[v _CCP2X `Vb 1 s@237 ]
"250
[v _ADON `b 1 s@248 ]
"251
[v _GODONE `Vb 1 s@249 ]
"252
[v _CHS0 `b 1 s@250 ]
"253
[v _CHS1 `b 1 s@251 ]
"254
[v _CHS2 `b 1 s@252 ]
"255
[v _CHS3 `b 1 s@253 ]
"256
[v _ADCS0 `b 1 s@254 ]
"257
[v _ADCS1 `b 1 s@255 ]
"260
[v _PS0 `Xb 1 s@1032 ]
"261
[v _PS1 `Xb 1 s@1033 ]
"262
[v _PS2 `Xb 1 s@1034 ]
"263
[v _PSA `Xb 1 s@1035 ]
"264
[v _T0SE `Xb 1 s@1036 ]
"265
[v _T0CS `Xb 1 s@1037 ]
"266
[v _INTEDG `Xb 1 s@1038 ]
"267
[v _RBPU `Xb 1 s@1039 ]
"269
[v _RABPU `Xb 1 s@1039 ]
"272
[v _TRISA0 `Xb 1 s@1064 ]
"273
[v _TRISA1 `Xb 1 s@1065 ]
"274
[v _TRISA2 `Xb 1 s@1066 ]
"275
[v _TRISA3 `Xb 1 s@1067 ]
"276
[v _TRISA4 `Xb 1 s@1068 ]
"277
[v _TRISA5 `Xb 1 s@1069 ]
"278
[v _TRISA6 `Xb 1 s@1070 ]
"279
[v _TRISA7 `Xb 1 s@1071 ]
"282
[v _TRISB0 `VXb 1 s@1072 ]
"283
[v _TRISB1 `VXb 1 s@1073 ]
"284
[v _TRISB2 `VXb 1 s@1074 ]
"285
[v _TRISB3 `VXb 1 s@1075 ]
"286
[v _TRISB4 `VXb 1 s@1076 ]
"287
[v _TRISB5 `VXb 1 s@1077 ]
"288
[v _TRISB6 `VXb 1 s@1078 ]
"289
[v _TRISB7 `VXb 1 s@1079 ]
"292
[v _TRISC0 `VXb 1 s@1080 ]
"293
[v _TRISC1 `VXb 1 s@1081 ]
"294
[v _TRISC2 `VXb 1 s@1082 ]
"295
[v _TRISC3 `VXb 1 s@1083 ]
"296
[v _TRISC4 `VXb 1 s@1084 ]
"297
[v _TRISC5 `VXb 1 s@1085 ]
"298
[v _TRISC6 `VXb 1 s@1086 ]
"299
[v _TRISC7 `VXb 1 s@1087 ]
"303
[v _TRISD0 `VXb 1 s@1088 ]
"304
[v _TRISD1 `VXb 1 s@1089 ]
"305
[v _TRISD2 `VXb 1 s@1090 ]
"306
[v _TRISD3 `VXb 1 s@1091 ]
"307
[v _TRISD4 `VXb 1 s@1092 ]
"308
[v _TRISD5 `VXb 1 s@1093 ]
"309
[v _TRISD6 `VXb 1 s@1094 ]
"310
[v _TRISD7 `VXb 1 s@1095 ]
"313
[v _TRISE0 `VXb 1 s@1096 ]
"314
[v _TRISE1 `VXb 1 s@1097 ]
"315
[v _TRISE2 `VXb 1 s@1098 ]
"317
[v _TRISE3 `VXb 1 s@1099 ]
"320
[v _TMR1IE `Xb 1 s@1120 ]
"321
[v _TMR2IE `Xb 1 s@1121 ]
"322
[v _CCP1IE `Xb 1 s@1122 ]
"323
[v _SSPIE `Xb 1 s@1123 ]
"324
[v _TXIE `Xb 1 s@1124 ]
"325
[v _RCIE `Xb 1 s@1125 ]
"326
[v _ADIE `Xb 1 s@1126 ]
"329
[v _CCP2IE `Xb 1 s@1128 ]
"330
[v _ULPWUIE `Xb 1 s@1130 ]
"331
[v _BCLIE `Xb 1 s@1131 ]
"332
[v _EEIE `Xb 1 s@1132 ]
"333
[v _C1IE `Xb 1 s@1133 ]
"334
[v _C2IE `Xb 1 s@1134 ]
"335
[v _OSFIE `Xb 1 s@1135 ]
"338
[v _BOR `VXb 1 s@1136 ]
"339
[v _POR `VXb 1 s@1137 ]
"340
[v _SBOREN `Xb 1 s@1140 ]
"341
[v _ULPWUE `Xb 1 s@1141 ]
"344
[v _SCS `Xb 1 s@1144 ]
"345
[v _LTS `VXb 1 s@1145 ]
"346
[v _HTS `VXb 1 s@1146 ]
"347
[v _OSTS `VXb 1 s@1147 ]
"348
[v _IRCF0 `Xb 1 s@1148 ]
"349
[v _IRCF1 `Xb 1 s@1149 ]
"350
[v _IRCF2 `Xb 1 s@1150 ]
"353
[v _TUN0 `Xb 1 s@1152 ]
"354
[v _TUN1 `Xb 1 s@1153 ]
"355
[v _TUN2 `Xb 1 s@1154 ]
"356
[v _TUN3 `Xb 1 s@1155 ]
"357
[v _TUN4 `Xb 1 s@1156 ]
"360
[v _SEN `Xb 1 s@1160 ]
"361
[v _RSEN `VXb 1 s@1161 ]
"362
[v _PEN `VXb 1 s@1162 ]
"363
[v _RCEN `VXb 1 s@1163 ]
"364
[v _ACKEN `VXb 1 s@1164 ]
"365
[v _ACKDT `VXb 1 s@1165 ]
"366
[v _ACKSTAT `VXb 1 s@1166 ]
"367
[v _GCEN `Xb 1 s@1167 ]
"370
[v _BF `VXb 1 s@1184 ]
"371
[v _UA `VXb 1 s@1185 ]
"372
[v _RW `VXb 1 s@1186 ]
"373
[v _START `VXb 1 s@1187 ]
"374
[v _STOP `VXb 1 s@1188 ]
"375
[v _DA `VXb 1 s@1189 ]
"376
[v _CKE `Xb 1 s@1190 ]
"377
[v _SMP `Xb 1 s@1191 ]
"380
[v _WPUB0 `Xb 1 s@1192 ]
"381
[v _WPUB1 `Xb 1 s@1193 ]
"382
[v _WPUB2 `Xb 1 s@1194 ]
"383
[v _WPUB3 `Xb 1 s@1195 ]
"384
[v _WPUB4 `Xb 1 s@1196 ]
"385
[v _WPUB5 `Xb 1 s@1197 ]
"386
[v _WPUB6 `Xb 1 s@1198 ]
"387
[v _WPUB7 `Xb 1 s@1199 ]
"390
[v _IOCB0 `Xb 1 s@1200 ]
"391
[v _IOCB1 `Xb 1 s@1201 ]
"392
[v _IOCB2 `Xb 1 s@1202 ]
"393
[v _IOCB3 `Xb 1 s@1203 ]
"394
[v _IOCB4 `Xb 1 s@1204 ]
"395
[v _IOCB5 `Xb 1 s@1205 ]
"396
[v _IOCB6 `Xb 1 s@1206 ]
"397
[v _IOCB7 `Xb 1 s@1207 ]
"400
[v _VR0 `Xb 1 s@1208 ]
"401
[v _VR1 `Xb 1 s@1209 ]
"402
[v _VR2 `Xb 1 s@1210 ]
"403
[v _VR3 `Xb 1 s@1211 ]
"404
[v _VRSS `Xb 1 s@1212 ]
"405
[v _VRR `Xb 1 s@1213 ]
"406
[v _VROE `Xb 1 s@1214 ]
"407
[v _VREN `Xb 1 s@1215 ]
"410
[v _TX9D `VXb 1 s@1216 ]
"411
[v _TRMT `VXb 1 s@1217 ]
"412
[v _BRGH `Xb 1 s@1218 ]
"413
[v _SENDB `Xb 1 s@1219 ]
"414
[v _SYNC `Xb 1 s@1220 ]
"415
[v _TXEN `Xb 1 s@1221 ]
"416
[v _TX9 `Xb 1 s@1222 ]
"417
[v _CSRC `Xb 1 s@1223 ]
"420
[v _BRG0 `Xb 1 s@1224 ]
"421
[v _BRG1 `Xb 1 s@1225 ]
"422
[v _BRG2 `Xb 1 s@1226 ]
"423
[v _BRG3 `Xb 1 s@1227 ]
"424
[v _BRG4 `Xb 1 s@1228 ]
"425
[v _BRG5 `Xb 1 s@1229 ]
"426
[v _BRG6 `Xb 1 s@1230 ]
"427
[v _BRG7 `Xb 1 s@1231 ]
"430
[v _BRG8 `Xb 1 s@1232 ]
"431
[v _BRG9 `Xb 1 s@1233 ]
"432
[v _BRG10 `Xb 1 s@1234 ]
"433
[v _BRG11 `Xb 1 s@1235 ]
"434
[v _BRG12 `Xb 1 s@1236 ]
"435
[v _BRG13 `Xb 1 s@1237 ]
"436
[v _BRG14 `Xb 1 s@1238 ]
"437
[v _BRG15 `Xb 1 s@1239 ]
"440
[v _PDC0 `VXb 1 s@1240 ]
"441
[v _PDC1 `VXb 1 s@1241 ]
"442
[v _PDC2 `VXb 1 s@1242 ]
"443
[v _PDC3 `VXb 1 s@1243 ]
"444
[v _PDC4 `VXb 1 s@1244 ]
"445
[v _PDC5 `VXb 1 s@1245 ]
"446
[v _PDC6 `VXb 1 s@1246 ]
"447
[v _PRSEN `VXb 1 s@1247 ]
"450
[v _PSSBD0 `Xb 1 s@1248 ]
"451
[v _PSSBD1 `Xb 1 s@1249 ]
"452
[v _PSSAC0 `Xb 1 s@1250 ]
"453
[v _PSSAC1 `Xb 1 s@1251 ]
"454
[v _ECCPAS0 `Xb 1 s@1252 ]
"455
[v _ECCPAS1 `Xb 1 s@1253 ]
"456
[v _ECCPAS2 `Xb 1 s@1254 ]
"457
[v _ECCPASE `VXb 1 s@1255 ]
"460
[v _STRA `VXb 1 s@1256 ]
"461
[v _STRB `VXb 1 s@1257 ]
"462
[v _STRC `VXb 1 s@1258 ]
"463
[v _STRD `VXb 1 s@1259 ]
"464
[v _STRSYNC `VXb 1 s@1260 ]
"467
[v _VCFG0 `Xb 1 s@1276 ]
"468
[v _VCFG1 `Xb 1 s@1277 ]
"469
[v _ADFM `Xb 1 s@1279 ]
"472
[v _SWDTEN `Yb 1 s@2088 ]
"473
[v _WDTPS0 `Yb 1 s@2089 ]
"474
[v _WDTPS1 `Yb 1 s@2090 ]
"475
[v _WDTPS2 `Yb 1 s@2091 ]
"476
[v _WDTPS3 `Yb 1 s@2092 ]
"479
[v _C1CH0 `Yb 1 s@2104 ]
"480
[v _C1CH1 `Yb 1 s@2105 ]
"481
[v _C1R `Yb 1 s@2106 ]
"482
[v _C1POL `Yb 1 s@2108 ]
"483
[v _C1OE `Yb 1 s@2109 ]
"484
[v _C1OUT `VYb 1 s@2110 ]
"485
[v _C1ON `Yb 1 s@2111 ]
"488
[v _C2CH0 `Yb 1 s@2112 ]
"489
[v _C2CH1 `Yb 1 s@2113 ]
"490
[v _C2R `Yb 1 s@2114 ]
"491
[v _C2POL `Yb 1 s@2116 ]
"492
[v _C2OE `Yb 1 s@2117 ]
"493
[v _C2OUT `VYb 1 s@2118 ]
"494
[v _C2ON `Yb 1 s@2119 ]
"497
[v _C2SYNC `Yb 1 s@2120 ]
"498
[v _T1GSS `Yb 1 s@2121 ]
"499
[v _C2RSEL `Yb 1 s@2124 ]
"500
[v _C1RSEL `Yb 1 s@2125 ]
"501
[v _MC2OUT `VYb 1 s@2126 ]
"502
[v _MC1OUT `VYb 1 s@2127 ]
"505
[v _FVREN `Zb 1 s@3112 ]
"506
[v _PULSR `VZb 1 s@3114 ]
"507
[v _PULSS `VZb 1 s@3115 ]
"508
[v _C2REN `Zb 1 s@3116 ]
"509
[v _C1SEN `Zb 1 s@3117 ]
"510
[v _SR0 `Zb 1 s@3118 ]
"511
[v _SR1 `Zb 1 s@3119 ]
"514
[v _ABDEN `VZb 1 s@3128 ]
"515
[v _WUE `VZb 1 s@3129 ]
"516
[v _BRG16 `Zb 1 s@3131 ]
"517
[v _SCKP `VZb 1 s@3132 ]
"518
[v _RCIDL `VZb 1 s@3134 ]
"519
[v _ABDOVF `VZb 1 s@3135 ]
"522
[v _ANS0 `Zb 1 s@3136 ]
"523
[v _ANS1 `Zb 1 s@3137 ]
"524
[v _ANS2 `Zb 1 s@3138 ]
"525
[v _ANS3 `Zb 1 s@3139 ]
"526
[v _ANS4 `Zb 1 s@3140 ]
"528
[v _ANS5 `Zb 1 s@3141 ]
"529
[v _ANS6 `Zb 1 s@3142 ]
"530
[v _ANS7 `Zb 1 s@3143 ]
"534
[v _ANS8 `Zb 1 s@3144 ]
"535
[v _ANS9 `Zb 1 s@3145 ]
"536
[v _ANS10 `Zb 1 s@3146 ]
"537
[v _ANS11 `Zb 1 s@3147 ]
"538
[v _ANS12 `Zb 1 s@3148 ]
"539
[v _ANS13 `Zb 1 s@3149 ]
"542
[v _RD `VZb 1 s@3168 ]
"543
[v _WR `VZb 1 s@3169 ]
"544
[v _WREN `Zb 1 s@3170 ]
"545
[v _WRERR `VZb 1 s@3171 ]
"546
[v _EEPGD `Zb 1 s@3175 ]
"4 C:\PICC\std\9.60\include\stdlib.h
[v _ptrdiff_t `i 1 t ]
"5
[v _size_t `ui 1 t ]
"6
[v _wchar_t `us 1 t ]
"30
[s S1 `i 1 `i 1 ]
[n S1 . rem quot ]
[v _div_t `S1 1 t ]
"34
[s S2 `ui 1 `ui 1 ]
[n S2 . rem quot ]
[v _udiv_t `S2 1 t ]
"38
[s S3 `l 1 `l 1 ]
[n S3 . quot rem ]
[v _ldiv_t `S3 1 t ]
"42
[s S4 `ul 1 `ul 1 ]
[n S4 . quot rem ]
[v _uldiv_t `S4 1 t ]
"122
[v F845 `(v 1 tf ]
"126
[v F857 `(i 1 tf2`*Cv`*Cv ]
"127
[v F866 `(i 1 tf2`*Cv`*Cv ]
"28 ..\..\Common\include\types.h
[v _ushort `us 1 t ]
"29
[v _ulong `ul 1 t ]
"30
[v _BYTE `uc 1 t ]
"31
[v _uchar `uc 1 t ]
"57
[s S6 `uc 1 `uc 1 ]
[n S6 . lo hi ]
"58
[u S5 `uc -> 2 `i `us 1 `S6 1 ]
[n S5 . b w st ]
[v _short_u `S5 1 t ]
"66
[s S8 `uc 1 `uc 1 ]
[n S8 . hi lo ]
"67
[u S7 `uc -> 2 `i `us 1 `S8 1 ]
[n S7 . b w ho ]
[v _bid_u `S7 1 t ]
"78
[u S9 `uc -> 4 `i `ul 1 ]
[n S9 . b w ]
[v _long_u `S9 1 t ]
"88
[s S10 `uc -> 3 `i ]
[n S10 mid24 val ]
[v _mid24_s `S10 1 t ]
"41 ..\..\Common\include\time.h
[s S12 `uc 1 `uc 1 ]
[n S12 . lo hi ]
"43
[u S11 `uc 1 `S12 1 `us 1 ]
[n S11 . cnt_byte s cnt ]
[v _Timer_u `S11 1 t ]
[c E914
"279 ..\include\mu.h
0
"280
1
"281
2
"282
3
"284
4
"286
5
"287
6
"288
7
"289
8
"290
9
"292
240
"293
241
"294
242
.. ]
[n E914 LMP_STATES LAMP_POST_ERROR LAMP_FIRMWARE_disabled LAMP_SEARCH_IN_PROGRESS LAMP_EVACUATE_IN_PROGRESS_disab LAMP_IDENTIFY LAMP_PAGER_ALARM LAMP_PAGER_CALL_1 LAMP_PAGER_CALL_2 LAMP_VLF_BLOCKED_STATE LAMP_STATES_NUM LAMP_NORMAL_STATE LAMP_INVERT_STATE LAMP_TEST_STATE ]
[c E945
"85 ..\..\Common\include\vlf_pkt.h
0
"86
1
"87
2
"88
3
"89
4
"90
5
"91
6
"92
7
"93
8
"98
9
.. ]
[n E945 VLF_COMMS_PACKET_TYPES VLF_MU_DETECT VLF_MU_MASK VLF_MU_QUICK_SEARCH_Y VLF_MU_QUICK_SEARCH_Z VLF_MU_LOCATE VLF_MU_VLF_RX_CONTROL VLF_MU_QUICK_SEARCH_X VLF_MU_TEST VLF_MU_MASK_FULL VLF_NO_PACKET ]
"105
[s S13 `uc 1 `uc 1 ]
[n S13 . sid seq ]
[v _DetectCommand_P2 `S13 1 t ]
"113
[s S14 `S10 1 `uc 1 `uc 1 ]
[n S14 . mid_s sid seq ]
[v _MaskCommand_P2 `S14 1 t ]
"119
[s S15 `S10 1 `uc 1 ]
[n S15 . mid_s timer ]
[v _MaskFullCommand_P3 `S15 1 t ]
"127
[s S16 `S10 1 `uc 1 ]
[n S16 . mid_s duration ]
[v _LocateCommand_P2 `S16 1 t ]
"150
[s S19 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S19 . mobility bit5 bit6 batteryproblem masked ]
"152
[u S18 `S19 1 `uc 1 ]
[n S18 . s status ]
"153
[s S17 `S10 1 `S18 1 ]
[n S17 . mid_s m ]
[v _GenericResponse_P2 `S17 1 t ]
"172
[u S21 `uc -> 8 `i `S13 1 `S16 1 `S14 1 `S15 1 `S17 1 ]
[n S21 . data det_cmd loc_cmd msk_cmd msk_full_cmd responce ]
"173
[s S20 `Vuc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `S21 1 ]
[n S20 Pkt_tx_buf_st state cnt idx shifter seq sid type u ]
[v _Pkt_tx_buf_st `S20 1 t ]
"196
[s S24 :1 `uc 1 :1 `uc 1 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S24 aps tail enable bit_score unlock combiner ]
"198
[u S23 `S24 1 `uc 1 ]
[n S23 flags aps aps_state ]
"203
[s S22 `Vuc 1 `uc 1 `uc 1 `*uc 1 `uc 1 `us 1 `us 1 `uc 1 `uc 1 `uc * -> 12 `i -> 4 `i `S23 1 `uc 1 `uc 1 `us 1 ]
[n S22 Pkt_rx_buf_st state cnt len ptr shifter preamble_score prev_preamble_score score unlocked preamble flags aps_lock_cnt aps_score aps_timeout ]
[v _Pkt_rx_buf_st `S22 1 t ]
[c E1034
"67 ..\include\vlf_comms.h
0
"68
1
"70
2
.. ]
[n E1034 VLF_STATE VLF_STATE_IDLE VLF_STATE_READBIT VLF_STATE_PACKET_TRANSMITTED ]
[c E1038
"74
0
"75
1
"76
2
"77
3
"79
4
.. ]
[n E1038 VLF_RX_STATES VLF_RX_APS VLF_RX_SEEKING VLF_RX_LOCKED VLF_RX_RECEIVING VLF_PACKET_READY ]
[c E1044
"83
0
"84
1
"85
2
"86
3
"87
4
"89
5
.. ]
[n E1044 TX_STATE VLF_TX_IDLE VLF_TX_LOCATE VLF_TX_PACKET_PREAMBLE VLF_TX_PACKET_TYPE VLF_TX_PACKET_DATA VLF_TX_PACKET_DONE ]
"88 ..\..\Common\include\uhf_pkt.h
[s S25 `uc 1 :3 `uc 1 :4 `uc 1 :1 `uc 1 `S7 1 :7 `uc 1 :1 `uc 1 :3 `uc 1 :3 `uc 1 :2 `uc 1 `S5 1 ]
[n S25 . mark no_slt type ms bid cur_grp reserv no_grp_u3 ext ext_reserv sum_u ]
[v _UHF_BI_s `S25 1 t ]
"104
[s S26 `uc 1 :3 `uc 1 :4 `uc 1 :1 `uc 1 `uc 1 `uc 1 `S10 1 `S5 1 ]
[n S26 . mark vlf_cmd type ms sid seq_dur mid_s sum_u ]
[v _UHF_VLF_s `S26 1 t ]
"115
[s S27 `uc 1 :3 `uc 1 :4 `uc 1 :1 `uc 1 `S9 1 `S5 1 ]
[n S27 . mark ext type ms mid sum_u ]
[v _UHF_BIRC_s `S27 1 t ]
"127
[s S28 `uc 1 :3 `uc 1 :4 `uc 1 :1 `uc 1 `S9 1 `uc 1 `S5 1 ]
[n S28 . mark ext type ms mid ext_data sum_u ]
[v _UHF_BIRC_E_s `S28 1 t ]
"139
[s S29 `uc 1 :3 `uc 1 :4 `uc 1 :1 `uc 1 `S7 1 `S9 1 `S5 1 ]
[n S29 . mark ext type ms bid mid sum_u ]
[v _UHF_II_s `S29 1 t ]
"150
[s S30 :1 `uc 1 :1 `uc 1 :1 `uc 1 :4 `uc 1 :1 `uc 1 ]
[n S30 . ack ack_manual trap_8khz type ms ]
[v _bir_cmd_s `S30 1 t ]
"165
[u S32 `S30 1 `uc 1 ]
[n S32 . c b ]
"169
[s S31 `uc 1 `S32 1 `S9 1 `S5 1 ]
[n S31 . mark cmd mid sum_u ]
[v _UHF_BIR_s `S31 1 t ]
"182
[s S33 `uc 1 :3 `uc 1 :4 `uc 1 :1 `uc 1 `uc 1 `S5 1 `uc 1 `S5 1 ]
[n S33 . mark gmsk_u3 type ms type_ctl sidx grp_u8 sum_u ]
[v _UhfCtrlSearchCTSt `S33 1 t ]
"194
[s S34 `uc 1 :3 `uc 1 :4 `uc 1 :1 `uc 1 `uc 1 `S9 1 `S5 1 ]
[n S34 . mark . type ms type_ctl mid sum_u ]
[v _UhfCtrlQueryCTSt `S34 1 t ]
"211
[s S35 `uc 1 :3 `uc 1 :4 `uc 1 :1 `uc 1 `uc 1 `S9 1 `uc 1 `uc 1 `uc 1 `uc 1 `S5 1 ]
[n S35 . mark . type ms type_ctl mid state wdog_resets vers_boot vers sum_u ]
[v _UhfCtrlSearchQueryRTSt `S35 1 t ]
"223
[s S36 `uc 1 :3 `uc 1 :4 `uc 1 :1 `uc 1 `uc 1 `S9 1 `S5 1 ]
[n S36 . mark . type ms type_ctl mid sum_u ]
[v _UhfCtrlBootModeCTSt `S36 1 t ]
"235
[s S37 `uc 1 :3 `uc 1 :4 `uc 1 :1 `uc 1 `uc 1 `S9 1 `S5 1 ]
[n S37 . mark . type ms type_ctl mid sum_u ]
[v _UhfCtrlDLInitTSt `S37 1 t ]
"251
[s S38 `uc 1 :3 `uc 1 :4 `uc 1 :1 `uc 1 `uc 1 `uc 1 `us 1 `us 1 `us -> 32 `i `S5 1 ]
[n S38 . mark . type ms type_ctl len seq address data sum_u ]
[v _UhfCtrlDLDataTSt `S38 1 t ]
"264
[s S39 `uc 1 :3 `uc 1 :4 `uc 1 :1 `uc 1 `uc 1 `S9 1 `us 1 `S5 1 ]
[n S39 . mark . type ms type_ctl mid seq sum_u ]
[v _UhfCtrlDLEndCTSt `S39 1 t ]
"278
[s S40 `uc 1 :3 `uc 1 :4 `uc 1 :1 `uc 1 `uc 1 `S9 1 `us 1 `S5 1 ]
[n S40 . mark . type ms type_ctl mid test_mode sum_u ]
[v _UHF_CRTL_TEST_s `S40 1 t ]
"294
[s S41 `uc 1 :3 `uc 1 :4 `uc 1 :1 `uc 1 `uc 1 `uc 1 `S5 1 ]
[n S41 . mark . type ms type_ctl status sum_u ]
[v _UhfCtrlDLEndRTSt `S41 1 t ]
"307
[s S42 `uc 1 :3 `uc 1 :4 `uc 1 :1 `uc 1 `uc 1 `S9 1 `us -> 4 `i `S5 1 ]
[n S42 . mark . type ms type_ctl curr_mid data_au16 sum_u ]
[v _UhfCtrlSetIdCTSt `S42 1 t ]
"320
[s S43 `uc 1 :3 `uc 1 :4 `uc 1 :1 `uc 1 `uc 1 `uc 1 `S5 1 ]
[n S43 . mark . type ms type_ctl success sum_u ]
[v _UhfCtrlSetIdRTSt `S43 1 t ]
"350
[u S44 `S25 1 `S27 1 `S28 1 `S29 1 `S31 1 `S33 1 `S34 1 `S35 1 `S36 1 `S37 1 `S38 1 `S39 1 `S41 1 `S42 1 `S43 1 `S40 1 `S26 1 `uc -> # `S38 `ui ]
[n S44 . bi birc birc_e ii bir csc cqc csqr cbmc cdi cdd cdec cder csic csir ctst vlf data ]
[v _UhfPktTU `S44 1 t ]
[c E1264
"354
0
"355
1
"356
2
"358
3
"359
4
"362
15
.. ]
[n E1264 UHF_PKT_TYPES UHF_BI_PKT UHF_BIRC_PKT UHF_II_PKT UHF_RESERV UHF_VLF_PKT UHF_CONTROL_PKT ]
[c E1271
"365
0
"366
1
"367
2
"368
3
"369
4
"371
5
.. ]
[n E1271 UHF_CONTROL_TYPES UHFC_SEARCH UHFC_QUERY UHFC_BOOTMODE UHFC_3 UHFC_4 UHFC_TESTMODE ]
"414
[s S45 `uc 1 `uc 1 `uc 1 `uc 1 `S44 1 ]
[n S45 Uhf_pkt_s rxt_state idx len brx_pkt_cnt pkt ]
[v _Uhf_pkt_s `S45 1 t ]
[c E1295
"65 ..\..\Common\include\cc1000.h
0
"67
1
.. ]
[n E1295 UHF_MODES UHF_RX_MODE UHF_TX_MODE ]
"45 C:\Users\Shchitnikov\Documents\GitHub\HPT2\Application\src\vlf_comms2.c
[v _vrx `XS22 1 e ]
"48
[v _vtx `XS20 1 e ]
"50
[v _vlf_state `Vuc 1 e ]
[i _vlf_state
-> . `E1034 0 `uc
]
"54
[v _su2mu_preamble `Cuc -> 12 `i e ]
[i _su2mu_preamble
:U ..
"55
-> & -> 1445 `i -> 1 `i `uc
"56
-> & >> -> 1445 `i -> 1 `i -> 1 `i `uc
"57
-> & >> -> 1445 `i -> 2 `i -> 1 `i `uc
"58
-> & >> -> 1445 `i -> 3 `i -> 1 `i `uc
"59
-> & >> -> 1445 `i -> 4 `i -> 1 `i `uc
"60
-> & >> -> 1445 `i -> 5 `i -> 1 `i `uc
"61
-> & >> -> 1445 `i -> 6 `i -> 1 `i `uc
"62
-> & >> -> 1445 `i -> 7 `i -> 1 `i `uc
"63
-> & >> -> 1445 `i -> 8 `i -> 1 `i `uc
"64
-> & >> -> 1445 `i -> 9 `i -> 1 `i `uc
"65
-> & >> -> 1445 `i -> 10 `i -> 1 `i `uc
"87
-> & >> -> 1445 `i -> 11 `i -> 1 `i `uc
..
]"90
[v _aps_preamble `Cuc -> 5 `i e ]
[i _aps_preamble
:U ..
"91
-> & >> -> 22 `i -> 4 `i -> 1 `i `uc
"92
-> & >> -> 22 `i -> 3 `i -> 1 `i `uc
"93
-> & >> -> 22 `i -> 2 `i -> 1 `i `uc
"94
-> & >> -> 22 `i -> 1 `i -> 1 `i `uc
"95
-> & >> -> 22 `i -> 0 `i -> 1 `i `uc
..
]"114
[v _mu2su_preamble `Cuc -> 8 `i e ]
[i _mu2su_preamble
:U ..
"115
-> & -> 165 `i -> 1 `i `uc
"116
-> & >> -> 165 `i -> 1 `i -> 1 `i `uc
"117
-> & >> -> 165 `i -> 2 `i -> 1 `i `uc
"118
-> & >> -> 165 `i -> 3 `i -> 1 `i `uc
"119
-> & >> -> 165 `i -> 4 `i -> 1 `i `uc
"120
-> & >> -> 165 `i -> 5 `i -> 1 `i `uc
"121
-> & >> -> 165 `i -> 6 `i -> 1 `i `uc
"123
-> & >> -> 165 `i -> 7 `i -> 1 `i `uc
..
]"131
[v _uncoded_rx_data_size `Cuc -> 0 `x e ]
[i _uncoded_rx_data_size
:U ..
"132
-> -> 2 `i `uc
"133
-> -> 5 `i `uc
"134
-> -> 0 `i `uc
"135
-> -> 0 `i `uc
"136
-> -> 4 `i `uc
"137
-> -> 0 `i `uc
"138
-> -> 0 `i `uc
"139
-> -> 0 `i `uc
"144
-> -> 4 `i `uc
..
]"150
[v _VLF_SendPacket `(v 0 sf ]
"151
[v _buffcrc `(uc 0 sf3`*uc`uc`uc ]
"152
[v _get_crc `(uc 0 sf2`uc`uc ]
"158
[v _get_crc `(uc 1 sf2`uc`uc ]
{
[v _crc `uc 1 r1 ]
[v _data `uc 1 r2 ]
[e :U _get_crc ]
[f ]
[; ;vlf_comms2.c: 157: static BYTE get_crc( BYTE crc, BYTE data )
[; ;vlf_comms2.c: 158: {
"159
[v _bit_cnt `uc 1 A ]
[; ;vlf_comms2.c: 159: register uchar bit_cnt;
[; ;vlf_comms2.c: 161: for( bit_cnt = 0; bit_cnt < 8; bit_cnt++ )
"161
[e = _bit_cnt -> -> 0 `i `uc ]
[e $ < -> _bit_cnt `i -> 8 `i 47 ]
[e $U 48 ]
"162
[e :U 47 ]
[; ;vlf_comms2.c: 162: { if( crc & 0x80 )
[e $ ! != & -> _crc `i -> 128 `i -> 0 `i 50 ]
[; ;vlf_comms2.c: 163: { crc <<= 1;
"163
[e =<< _crc -> 1 `i ]
[; ;vlf_comms2.c: 164: if( data & 0x80 )
"164
[e $ ! != & -> _data `i -> 128 `i -> 0 `i 51 ]
[; ;vlf_comms2.c: 165: crc |= 0x01;
"165
[e =| _crc -> -> 1 `i `uc ]
[e :U 51 ]
[; ;vlf_comms2.c: 166: crc = crc ^ 0x85;
"166
[e = _crc -> ^ -> _crc `i -> 133 `i `uc ]
"167
[; ;vlf_comms2.c: 167: }
[e $U 52 ]
"168
[e :U 50 ]
[; ;vlf_comms2.c: 168: else
[; ;vlf_comms2.c: 169: { crc <<= 1;
"169
[e =<< _crc -> 1 `i ]
[; ;vlf_comms2.c: 170: if( data & 0x80 )
"170
[e $ ! != & -> _data `i -> 128 `i -> 0 `i 53 ]
[; ;vlf_comms2.c: 171: crc |= 0x01;
"171
[e =| _crc -> -> 1 `i `uc ]
[e :U 53 ]
"172
[e :U 52 ]
[; ;vlf_comms2.c: 172: }
[; ;vlf_comms2.c: 173: data <<= 1;
"173
[e =<< _data -> 1 `i ]
"161
[e ++ _bit_cnt -> -> 1 `i `uc ]
[e $ < -> _bit_cnt `i -> 8 `i 47 ]
[e :U 48 ]
[; ;vlf_comms2.c: 174: }
[; ;vlf_comms2.c: 175: return( crc );
"175
[e ) _crc ]
[e $UE 46 ]
"176
[; ;vlf_comms2.c: 176: }
[e :UE 46 ]
}
"182
[v _buffcrc `(uc 1 sf3`*uc`uc`uc ]
{
[v _ptr `*uc 1 r1 ]
[v _crc `uc 1 r2 ]
[v _len `uc 1 r3 ]
[e :U _buffcrc ]
[f ]
[; ;vlf_comms2.c: 181: static BYTE buffcrc( BYTE *ptr, BYTE crc, uchar len )
[; ;vlf_comms2.c: 182: {
[; ;vlf_comms2.c: 183: while( len-- )
"183
[e $U 55 ]
[e :U 56 ]
[; ;vlf_comms2.c: 184: crc = get_crc( crc, *ptr++ );
"184
[e = _crc ( _get_crc (2 , _crc *U ++ _ptr * -> -> 1 `i `x -> -> # `uc `i `x ]
[e :U 55 ]
"183
[e $ != -> -- _len -> -> 1 `i `uc `i -> -> -> 0 `i `uc `i 56 ]
[e :U 57 ]
[; ;vlf_comms2.c: 185: return( crc );
"185
[e ) _crc ]
[e $UE 54 ]
"186
[; ;vlf_comms2.c: 186: }
[e :UE 54 ]
}
"196
[v _VLF_Busy `(uc 1 ef ]
{
[e :U _VLF_Busy ]
[f ]
[; ;vlf_comms2.c: 195: uchar VLF_Busy(void)
[; ;vlf_comms2.c: 196: {
[; ;vlf_comms2.c: 197: if( ( vrx.state == VLF_RX_SEEKING )&&( vtx.state == VLF_TX_IDLE ) )
"197
[e $ ! && == -> . _vrx 0 `i -> . `E1038 1 `i == -> . _vtx 0 `i -> . `E1044 0 `i 59 ]
[; ;vlf_comms2.c: 198: return( (0) );
"198
[e ) -> -> 0 `i `uc ]
[e $UE 58 ]
[e :U 59 ]
[; ;vlf_comms2.c: 200: return( (1) );
"200
[e ) -> -> 1 `i `uc ]
[e $UE 58 ]
"201
[; ;vlf_comms2.c: 201: }
[e :UE 58 ]
}
"212
[v _VLF_ProcessPacket `(uc 1 ef ]
{
[e :U _VLF_ProcessPacket ]
[f ]
[; ;vlf_comms2.c: 211: BYTE VLF_ProcessPacket(void)
[; ;vlf_comms2.c: 212: {
"213
[v _crc `uc 1 a ]
[; ;vlf_comms2.c: 213: BYTE crc;
[; ;vlf_comms2.c: 219: if( vtx.type >= VLF_NO_PACKET )
"219
[e $ ! >= -> . _vtx 6 `i -> . `E945 9 `i 61 ]
[; ;vlf_comms2.c: 220: { VLF_StartReceiver();
"220
[v _VLF_StartReceiver `(v 0 ef ]
[e ( _VLF_StartReceiver ..  ]
[; ;vlf_comms2.c: 226: return( 1 );
"226
[e ) -> -> 1 `i `uc ]
[e $UE 60 ]
"227
[e :U 61 ]
[; ;vlf_comms2.c: 227: }
[; ;vlf_comms2.c: 229: crc = get_crc( 0xF5, (vtx.type << 4) );
"229
[e = _crc ( _get_crc (2 , -> -> 245 `i `uc -> << -> . _vtx 6 `i -> 4 `i `uc ]
[; ;vlf_comms2.c: 230: crc = buffcrc( &vtx.u.data[0], crc, ( (BYTE)(uncoded_rx_data_size[vtx.type] + 1) ) - 1 );
"230
[e = _crc ( _buffcrc (3 , , -> &U *U + &U . . _vtx 7 0 * -> -> -> 0 `i `ui `ux -> -> # `Xuc `ui `ux `*uc _crc -> - -> -> + -> *U + &U _uncoded_rx_data_size * -> . _vtx 6 `ux -> -> # `Cuc `ui `ux `i -> 1 `i `uc `i -> 1 `i `uc ]
[; ;vlf_comms2.c: 231: crc = get_crc( crc, 0x00 );
"231
[e = _crc ( _get_crc (2 , _crc -> -> 0 `i `uc ]
[; ;vlf_comms2.c: 234: if( vtx.u.data[( (BYTE)(uncoded_rx_data_size[vtx.type] ) )] != crc )
"234
[e $ ! != -> *U + &U . . _vtx 7 0 * -> *U + &U _uncoded_rx_data_size * -> . _vtx 6 `ux -> -> # `Cuc `ui `ux `ux -> -> # `Xuc `ui `ux `i -> _crc `i 62 ]
[; ;vlf_comms2.c: 235: { VLF_StartReceiver();
"235
[e ( _VLF_StartReceiver ..  ]
[; ;vlf_comms2.c: 239: return( 2 );
"239
[e ) -> -> 2 `i `uc ]
[e $UE 60 ]
"240
[e :U 62 ]
[; ;vlf_comms2.c: 240: }
[; ;vlf_comms2.c: 243: switch( vtx.type )
"243
[e $U 64 ]
[; ;vlf_comms2.c: 244: {
[; ;vlf_comms2.c: 245: case VLF_MU_DETECT:
"245
[e :U 65 ]
[; ;vlf_comms2.c: 247: if( ( vtx.u.det_cmd.sid != vtx.sid )||( vtx.u.det_cmd.seq != vtx.seq ) )
"247
[e $ ! || != -> . . . _vtx 7 1 0 `i -> . _vtx 5 `i != -> . . . _vtx 7 1 1 `i -> . _vtx 4 `i 66 ]
[; ;vlf_comms2.c: 248: {
[; ;vlf_comms2.c: 250: if( lamp_state == LAMP_SEARCH_IN_PROGRESS )
"250
[v _lamp_state `uc 0 e ]
[e $ ! == -> _lamp_state `i -> . `E914 2 `i 67 ]
[; ;vlf_comms2.c: 251: { lamp_state = LAMP_NORMAL_STATE;
"251
[e = _lamp_state -> . `E914 10 `uc ]
[; ;vlf_comms2.c: 254: RC1 = ( mu_flags & (0x04) ) ? 1 : 0;
"254
[v _mu_flags `uc 0 e ]
[e = _RC1 -> ? != & -> _mu_flags `i -> 4 `i -> 0 `i : -> 1 `i -> 0 `i `b ]
"258
[; ;vlf_comms2.c: 258: }
[e $U 68 ]
"259
[e :U 67 ]
[; ;vlf_comms2.c: 259: else if( lamp_state == LAMP_VLF_BLOCKED_STATE )
[e $ ! == -> _lamp_state `i -> . `E914 8 `i 69 ]
[; ;vlf_comms2.c: 260: {
[; ;vlf_comms2.c: 273: { VLF_StartReceiver();
"273
[e ( _VLF_StartReceiver ..  ]
[; ;vlf_comms2.c: 274: return( 0 );
"274
[e ) -> -> 0 `i `uc ]
[e $UE 60 ]
"276
[e :U 69 ]
"279
[e :U 68 ]
[; ;vlf_comms2.c: 275: }
[; ;vlf_comms2.c: 276: }
[; ;vlf_comms2.c: 279: delay_ms( ((5*85)+20) * 2 );
[v _delay_ms `(v 0 ef1`us ]
[e ( _delay_ms (1 -> * + * -> 5 `i -> 85 `i -> 20 `i -> 2 `i `us ]
[; ;vlf_comms2.c: 281: VLF_ReplyToBroadcastRequest( 10 );
"281
[v _VLF_ReplyToBroadcastRequest `(v 0 ef1`uc ]
[e ( _VLF_ReplyToBroadcastRequest (1 -> -> 10 `i `uc ]
[; ;vlf_comms2.c: 282: return( 0 );
"282
[e ) -> -> 0 `i `uc ]
[e $UE 60 ]
"283
[e :U 66 ]
[; ;vlf_comms2.c: 283: }
[; ;vlf_comms2.c: 284: break;
"284
[e $U 63 ]
[; ;vlf_comms2.c: 287: case VLF_MU_MASK:
"287
[e :U 70 ]
[; ;vlf_comms2.c: 288: if(
"289
[v _mid `S9 0 e ]
"291
[; ;vlf_comms2.c: 289: ( vtx.u.msk_cmd.mid_s.val[2] == mid.b[1] )&&
[; ;vlf_comms2.c: 290: ( vtx.u.msk_cmd.mid_s.val[1] == mid.b[2] )&&
[; ;vlf_comms2.c: 291: ( vtx.u.msk_cmd.mid_s.val[0] == mid.b[3] ) )
[e $ ! && && == -> *U + &U . . . . _vtx 7 3 0 0 * -> -> -> 2 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _mid 0 * -> -> -> 1 `i `ui `ux -> -> # `uc `ui `ux `i == -> *U + &U . . . . _vtx 7 3 0 0 * -> -> -> 1 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _mid 0 * -> -> -> 2 `i `ui `ux -> -> # `uc `ui `ux `i == -> *U + &U . . . . _vtx 7 3 0 0 * -> -> -> 0 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _mid 0 * -> -> -> 3 `i `ui `ux -> -> # `uc `ui `ux `i 71 ]
[; ;vlf_comms2.c: 292: {
[; ;vlf_comms2.c: 293: delay_ms( ((8*85)+20) * 2 );
"293
[e ( _delay_ms (1 -> * + * -> 8 `i -> 85 `i -> 20 `i -> 2 `i `us ]
[; ;vlf_comms2.c: 295: if( lamp_state != LAMP_SEARCH_IN_PROGRESS )
"295
[e $ ! != -> _lamp_state `i -> . `E914 2 `i 72 ]
[; ;vlf_comms2.c: 296: { lamp_state = LAMP_SEARCH_IN_PROGRESS;
"296
[e = _lamp_state -> . `E914 2 `uc ]
[; ;vlf_comms2.c: 297: lamp_timeout = (timer.cnt + (ushort)((ushort)( 3*60*(15.2588))));
"297
[v _lamp_timeout `us 0 e ]
[v _timer `VS11 0 e ]
[e = _lamp_timeout -> + -> . _timer 2 `ui -> -> * -> * -> 3 `i -> 60 `i `d .15.2588 `us `ui `us ]
"298
[e :U 72 ]
[; ;vlf_comms2.c: 298: }
[; ;vlf_comms2.c: 299: vtx.seq = vtx.u.msk_cmd.seq;
"299
[e = . _vtx 4 . . . _vtx 7 3 2 ]
[; ;vlf_comms2.c: 300: vtx.sid = vtx.u.msk_cmd.sid;
"300
[e = . _vtx 5 . . . _vtx 7 3 1 ]
[; ;vlf_comms2.c: 301: VLF_SendGeneric();
"301
[v _VLF_SendGeneric `(v 0 ef ]
[e ( _VLF_SendGeneric ..  ]
[; ;vlf_comms2.c: 302: return( 0 );
"302
[e ) -> -> 0 `i `uc ]
[e $UE 60 ]
"303
[e :U 71 ]
[; ;vlf_comms2.c: 303: }
[; ;vlf_comms2.c: 304: break;
"304
[e $U 63 ]
[; ;vlf_comms2.c: 306: case VLF_MU_QUICK_SEARCH_X:
"306
[e :U 73 ]
[; ;vlf_comms2.c: 307: delay_ms( ((3*85)+20) );
"307
[e ( _delay_ms (1 -> + * -> 3 `i -> 85 `i -> 20 `i `us ]
[; ;vlf_comms2.c: 309: case VLF_MU_QUICK_SEARCH_Y:
"309
[e :U 74 ]
[; ;vlf_comms2.c: 310: delay_ms( ((3*85)+20) );
"310
[e ( _delay_ms (1 -> + * -> 3 `i -> 85 `i -> 20 `i `us ]
[; ;vlf_comms2.c: 312: case VLF_MU_QUICK_SEARCH_Z:
"312
[e :U 75 ]
[; ;vlf_comms2.c: 314: if( lamp_state == LAMP_VLF_BLOCKED_STATE )
"314
[e $ ! == -> _lamp_state `i -> . `E914 8 `i 76 ]
[; ;vlf_comms2.c: 315: VLF_StartReceiver();
"315
[e ( _VLF_StartReceiver ..  ]
[e $U 77 ]
"316
[e :U 76 ]
[; ;vlf_comms2.c: 316: else
[; ;vlf_comms2.c: 317: VLF_ReplyToBroadcastRequest( 5 );
"317
[e ( _VLF_ReplyToBroadcastRequest (1 -> -> 5 `i `uc ]
[e :U 77 ]
[; ;vlf_comms2.c: 318: return( 0 );
"318
[e ) -> -> 0 `i `uc ]
[e $UE 60 ]
[; ;vlf_comms2.c: 320: case VLF_MU_LOCATE:
"320
[e :U 78 ]
[; ;vlf_comms2.c: 321: if(
"324
[; ;vlf_comms2.c: 322: ( vtx.u.msk_cmd.mid_s.val[2] == mid.b[1]) &&
[; ;vlf_comms2.c: 323: ( vtx.u.msk_cmd.mid_s.val[1] == mid.b[2]) &&
[; ;vlf_comms2.c: 324: ( vtx.u.msk_cmd.mid_s.val[0] == mid.b[3]) )
[e $ ! && && == -> *U + &U . . . . _vtx 7 3 0 0 * -> -> -> 2 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _mid 0 * -> -> -> 1 `i `ui `ux -> -> # `uc `ui `ux `i == -> *U + &U . . . . _vtx 7 3 0 0 * -> -> -> 1 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _mid 0 * -> -> -> 2 `i `ui `ux -> -> # `uc `ui `ux `i == -> *U + &U . . . . _vtx 7 3 0 0 * -> -> -> 0 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _mid 0 * -> -> -> 3 `i `ui `ux -> -> # `uc `ui `ux `i 79 ]
[; ;vlf_comms2.c: 325: { delay_ms( ((7*85)+20) * 2 );
"325
[e ( _delay_ms (1 -> * + * -> 7 `i -> 85 `i -> 20 `i -> 2 `i `us ]
[; ;vlf_comms2.c: 326: VLF_ReplyLocateRequest( vtx.u.loc_cmd.duration );
"326
[v _VLF_ReplyLocateRequest `(v 0 ef1`uc ]
[e ( _VLF_ReplyLocateRequest (1 . . . _vtx 7 2 1 ]
[; ;vlf_comms2.c: 327: VLF_StartReceiver();
"327
[e ( _VLF_StartReceiver ..  ]
[; ;vlf_comms2.c: 328: return( 0 );
"328
[e ) -> -> 0 `i `uc ]
[e $UE 60 ]
"329
[e :U 79 ]
[; ;vlf_comms2.c: 329: }
[; ;vlf_comms2.c: 330: break;
"330
[e $U 63 ]
[; ;vlf_comms2.c: 332: case VLF_MU_TEST:
"332
[e :U 80 ]
[; ;vlf_comms2.c: 334: VLF_SendGeneric();
"334
[e ( _VLF_SendGeneric ..  ]
[; ;vlf_comms2.c: 336: return( 0 );
"336
[e ) -> -> 0 `i `uc ]
[e $UE 60 ]
[; ;vlf_comms2.c: 339: case VLF_MU_MASK_FULL:
"339
[e :U 81 ]
[; ;vlf_comms2.c: 340: if(
"343
[; ;vlf_comms2.c: 341: ( vtx.u.msk_full_cmd.mid_s.val[2] == mid.b[1] )&&
[; ;vlf_comms2.c: 342: ( vtx.u.msk_full_cmd.mid_s.val[1] == mid.b[2] )&&
[; ;vlf_comms2.c: 343: ( vtx.u.msk_full_cmd.mid_s.val[0] == mid.b[3] ) )
[e $ ! && && == -> *U + &U . . . . _vtx 7 4 0 0 * -> -> -> 2 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _mid 0 * -> -> -> 1 `i `ui `ux -> -> # `uc `ui `ux `i == -> *U + &U . . . . _vtx 7 4 0 0 * -> -> -> 1 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _mid 0 * -> -> -> 2 `i `ui `ux -> -> # `uc `ui `ux `i == -> *U + &U . . . . _vtx 7 4 0 0 * -> -> -> 0 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _mid 0 * -> -> -> 3 `i `ui `ux -> -> # `uc `ui `ux `i 82 ]
[; ;vlf_comms2.c: 344: {
[; ;vlf_comms2.c: 345: delay_ms( ((8*85)+20) * 2 );
"345
[e ( _delay_ms (1 -> * + * -> 8 `i -> 85 `i -> 20 `i -> 2 `i `us ]
[; ;vlf_comms2.c: 347: lamp_min_cnt = vtx.u.msk_full_cmd.timer;
"347
[v _lamp_min_cnt `uc 0 e ]
[e = _lamp_min_cnt . . . _vtx 7 4 1 ]
[; ;vlf_comms2.c: 348: if( lamp_min_cnt )
"348
[e $ ! != -> _lamp_min_cnt `i -> -> -> 0 `i `uc `i 83 ]
[; ;vlf_comms2.c: 349: { lamp_state = LAMP_VLF_BLOCKED_STATE;
"349
[e = _lamp_state -> . `E914 8 `uc ]
[; ;vlf_comms2.c: 350: lamp_timeout = (timer.cnt + (ushort)((ushort)( 60*(15.2588))));
"350
[e = _lamp_timeout -> + -> . _timer 2 `ui -> -> * -> -> 60 `i `d .15.2588 `us `ui `us ]
"351
[; ;vlf_comms2.c: 351: }
[e $U 84 ]
"352
[e :U 83 ]
[; ;vlf_comms2.c: 352: else
[; ;vlf_comms2.c: 353: { lamp_state = LAMP_NORMAL_STATE;
"353
[e = _lamp_state -> . `E914 10 `uc ]
[; ;vlf_comms2.c: 355: RC1 = ( mu_flags & (0x04) ) ? 1 : 0;
"355
[e = _RC1 -> ? != & -> _mu_flags `i -> 4 `i -> 0 `i : -> 1 `i -> 0 `i `b ]
"359
[e :U 84 ]
[; ;vlf_comms2.c: 359: }
[; ;vlf_comms2.c: 360: VLF_SendGeneric();
"360
[e ( _VLF_SendGeneric ..  ]
[; ;vlf_comms2.c: 361: return( 0 );
"361
[e ) -> -> 0 `i `uc ]
[e $UE 60 ]
"362
[e :U 82 ]
[; ;vlf_comms2.c: 362: }
[; ;vlf_comms2.c: 363: break;
"363
[e $U 63 ]
[; ;vlf_comms2.c: 396: default:
"396
[e :U 85 ]
[; ;vlf_comms2.c: 397: VLF_StartReceiver();
"397
[e ( _VLF_StartReceiver ..  ]
[; ;vlf_comms2.c: 398: return( 3 );
"398
[e ) -> -> 3 `i `uc ]
[e $UE 60 ]
"400
[; ;vlf_comms2.c: 400: }
[e $U 63 ]
"243
[e :U 64 ]
[e [\ . _vtx 6 , $ -> . `E945 0 `uc 65
 , $ -> . `E945 1 `uc 70
 , $ -> . `E945 6 `uc 73
 , $ -> . `E945 2 `uc 74
 , $ -> . `E945 3 `uc 75
 , $ -> . `E945 4 `uc 78
 , $ -> . `E945 7 `uc 80
 , $ -> . `E945 8 `uc 81
 85 ]
"400
[e :U 63 ]
[; ;vlf_comms2.c: 401: VLF_StartReceiver();
"401
[e ( _VLF_StartReceiver ..  ]
[; ;vlf_comms2.c: 402: return( 0 );
"402
[e ) -> -> 0 `i `uc ]
[e $UE 60 ]
"403
[; ;vlf_comms2.c: 403: }
[e :UE 60 ]
}
"415
[v _VLF_ProcessBitRead `(uc 1 ef ]
{
[e :U _VLF_ProcessBitRead ]
[f ]
[; ;vlf_comms2.c: 414: char VLF_ProcessBitRead(void)
[; ;vlf_comms2.c: 415: {
"416
[v _ii `uc 1 A ]
[; ;vlf_comms2.c: 416: register BYTE ii;
[; ;vlf_comms2.c: 419: vrx.state = VLF_RX_APS;
"419
[e = . _vrx 0 -> . `E1038 0 `uc ]
[; ;vlf_comms2.c: 422: switch( vrx.state )
"422
[e $U 88 ]
[; ;vlf_comms2.c: 423: {
[; ;vlf_comms2.c: 426: case VLF_RX_APS:
"426
[e :U 89 ]
[; ;vlf_comms2.c: 427: {
[; ;vlf_comms2.c: 428: if( vrx.cnt >= (5 *(4)) )
"428
[e $ ! >= -> . _vrx 1 `i * -> 5 `i -> 4 `i 90 ]
[; ;vlf_comms2.c: 429: {
[; ;vlf_comms2.c: 430: for( ii = 0, vrx.unlocked = 0, vrx.preamble_score = 0;
"430
[e ; ; = _ii -> -> 0 `i `uc = . _vrx 8 -> -> 0 `i `uc = . _vrx 5 -> -> 0 `i `us ]
[; ;vlf_comms2.c: 431: ( ii < 5 )&&( !vrx.unlocked ); ii++ )
[e $U 94 ]
"432
[e :U 91 ]
[; ;vlf_comms2.c: 432: {
[; ;vlf_comms2.c: 433: vrx.score = vrx.preamble[ (ii<<2) ] +
"436
[; ;vlf_comms2.c: 434: vrx.preamble[ (ii<<2) + 1 ] +
[; ;vlf_comms2.c: 435: vrx.preamble[ (ii<<2) + 2 ] +
[; ;vlf_comms2.c: 436: vrx.preamble[ (ii<<2) + 3 ];
[e = . _vrx 7 -> + + + -> *U + &U . _vrx 9 * -> -> << -> _ii `i -> 2 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _vrx 9 * -> -> + << -> _ii `i -> 2 `i -> 1 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _vrx 9 * -> -> + << -> _ii `i -> 2 `i -> 2 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _vrx 9 * -> -> + << -> _ii `i -> 2 `i -> 3 `i `ui `ux -> -> # `Xuc `ui `ux `i `uc ]
[; ;vlf_comms2.c: 438: vrx.score >>= 3;
"438
[e =>> . _vrx 7 -> 3 `i ]
[; ;vlf_comms2.c: 440: if( aps_preamble[ii] )
"440
[e $ ! != -> *U + &U _aps_preamble * -> _ii `ux -> -> # `Cuc `ui `ux `i -> -> -> 0 `i `Cuc `i 95 ]
[; ;vlf_comms2.c: 441: { if( vrx.score <= 3 )
"441
[e $ ! <= -> . _vrx 7 `i -> 3 `i 96 ]
[; ;vlf_comms2.c: 442: vrx.unlocked = 1;
"442
[e = . _vrx 8 -> -> 1 `i `uc ]
[e $U 97 ]
"443
[e :U 96 ]
[; ;vlf_comms2.c: 443: else
[; ;vlf_comms2.c: 444: vrx.preamble_score += ((((8000)/(100)) >> 3) - vrx.score );
"444
[e =+ . _vrx 5 -> - >> / -> 8000 `i -> 100 `i -> 3 `i -> . _vrx 7 `i `us ]
[e :U 97 ]
"445
[; ;vlf_comms2.c: 445: }
[e $U 98 ]
"446
[e :U 95 ]
[; ;vlf_comms2.c: 446: else
[; ;vlf_comms2.c: 447: { if( vrx.score >= 2 )
"447
[e $ ! >= -> . _vrx 7 `i -> 2 `i 99 ]
[; ;vlf_comms2.c: 448: vrx.unlocked = 1;
"448
[e = . _vrx 8 -> -> 1 `i `uc ]
[e $U 100 ]
"449
[e :U 99 ]
[; ;vlf_comms2.c: 449: else
[; ;vlf_comms2.c: 450: vrx.preamble_score += vrx.score;
"450
[e =+ . _vrx 5 -> . _vrx 7 `us ]
[e :U 100 ]
"451
[e :U 98 ]
"431
[e ++ _ii -> -> 1 `i `uc ]
[e :U 94 ]
[e $ && < -> _ii `i -> 5 `i ! != -> . _vrx 8 `i -> -> -> 0 `i `Xuc `i 91 ]
[e :U 92 ]
[; ;vlf_comms2.c: 451: }
[; ;vlf_comms2.c: 452: }
[; ;vlf_comms2.c: 454: if( vrx.prev_preamble_score != 0xFFFF )
"454
[e $ ! != -> . _vrx 6 `ui -> 65535 `ui 101 ]
[; ;vlf_comms2.c: 455: { if( ( vrx.unlocked )||( vrx.preamble_score > vrx.prev_preamble_score ) )
"455
[e $ ! || != -> . _vrx 8 `i -> -> -> 0 `i `Xuc `i > -> . _vrx 5 `ui -> . _vrx 6 `ui 102 ]
[; ;vlf_comms2.c: 456: {
[; ;vlf_comms2.c: 457: vrx.cnt = 1;
"457
[e = . _vrx 1 -> -> 1 `i `uc ]
[; ;vlf_comms2.c: 458: vrx.prev_preamble_score = 0xFFFF;
"458
[e = . _vrx 6 -> -> 65535 `ui `us ]
[; ;vlf_comms2.c: 459: RB0 ^= 1;
"459
[e =^ _RB0 -> -> 1 `i `b ]
[; ;vlf_comms2.c: 461: if(vrx.flags.aps.combiner == (0))
"461
[e $ ! == -> . . . _vrx 10 0 4 `i -> 0 `i 103 ]
[; ;vlf_comms2.c: 462: {
[; ;vlf_comms2.c: 464: mu_flags |= (0x80);
"464
[e =| _mu_flags -> -> 128 `i `uc ]
[; ;vlf_comms2.c: 466: if( lamp_state == LAMP_NORMAL_STATE )
"466
[e $ ! == -> _lamp_state `i -> . `E914 10 `i 104 ]
[; ;vlf_comms2.c: 467: {
[; ;vlf_comms2.c: 468: lamp_state = LAMP_IDENTIFY;
"468
[e = _lamp_state -> . `E914 4 `uc ]
[; ;vlf_comms2.c: 469: lamp_timeout = (timer.cnt + (ushort)((ushort)( 1*(15.2588))));
"469
[e = _lamp_timeout -> + -> . _timer 2 `ui -> -> * -> -> 1 `i `d .15.2588 `us `ui `us ]
"470
[e :U 104 ]
"471
[e :U 103 ]
[; ;vlf_comms2.c: 470: }
[; ;vlf_comms2.c: 471: }
[; ;vlf_comms2.c: 472: mu_flags |= (0x80);
"472
[e =| _mu_flags -> -> 128 `i `uc ]
"473
[; ;vlf_comms2.c: 473: }
[e $U 105 ]
"474
[e :U 102 ]
[; ;vlf_comms2.c: 474: else
[; ;vlf_comms2.c: 475: vrx.prev_preamble_score = vrx.preamble_score;
"475
[e = . _vrx 6 . _vrx 5 ]
[e :U 105 ]
"476
[; ;vlf_comms2.c: 476: }
[e $U 106 ]
"477
[e :U 101 ]
[; ;vlf_comms2.c: 477: else if( !vrx.unlocked )
[e $ ! ! != -> . _vrx 8 `i -> -> -> 0 `i `Xuc `i 107 ]
[; ;vlf_comms2.c: 478: {
[; ;vlf_comms2.c: 479: vrx.prev_preamble_score = vrx.preamble_score;
"479
[e = . _vrx 6 . _vrx 5 ]
"480
[e :U 107 ]
"481
[e :U 106 ]
[; ;vlf_comms2.c: 480: }
[; ;vlf_comms2.c: 481: }
[e $U 108 ]
"482
[e :U 90 ]
[; ;vlf_comms2.c: 482: else
[; ;vlf_comms2.c: 483: vrx.cnt++;
"483
[e ++ . _vrx 1 -> -> 1 `i `uc ]
[e :U 108 ]
[; ;vlf_comms2.c: 488: }
[; ;vlf_comms2.c: 489: break;
"489
[e $U 87 ]
[; ;vlf_comms2.c: 492: case VLF_RX_SEEKING:
"492
[e :U 109 ]
[; ;vlf_comms2.c: 494: {
[; ;vlf_comms2.c: 495: if( vrx.cnt >= (12*(4)) )
"495
[e $ ! >= -> . _vrx 1 `i * -> 12 `i -> 4 `i 110 ]
[; ;vlf_comms2.c: 496: {
[; ;vlf_comms2.c: 497: for( ii = 0, vrx.unlocked = 0, vrx.preamble_score = 0;
"497
[e ; ; = _ii -> -> 0 `i `uc = . _vrx 8 -> -> 0 `i `uc = . _vrx 5 -> -> 0 `i `us ]
[; ;vlf_comms2.c: 498: ( ii < 12 )&&( !vrx.unlocked ); ii++ )
[e $U 114 ]
"499
[e :U 111 ]
[; ;vlf_comms2.c: 499: {
[; ;vlf_comms2.c: 508: vrx.score = vrx.preamble[ (ii<<2) ] +
"511
[; ;vlf_comms2.c: 509: vrx.preamble[ (ii<<2) + 1 ] +
[; ;vlf_comms2.c: 510: vrx.preamble[ (ii<<2) + 2 ] +
[; ;vlf_comms2.c: 511: vrx.preamble[ (ii<<2) + 3 ];
[e = . _vrx 7 -> + + + -> *U + &U . _vrx 9 * -> -> << -> _ii `i -> 2 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _vrx 9 * -> -> + << -> _ii `i -> 2 `i -> 1 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _vrx 9 * -> -> + << -> _ii `i -> 2 `i -> 2 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _vrx 9 * -> -> + << -> _ii `i -> 2 `i -> 3 `i `ui `ux -> -> # `Xuc `ui `ux `i `uc ]
[; ;vlf_comms2.c: 513: vrx.score >>= 3;
"513
[e =>> . _vrx 7 -> 3 `i ]
[; ;vlf_comms2.c: 529: if( su2mu_preamble[ii] )
"529
[e $ ! != -> *U + &U _su2mu_preamble * -> _ii `ux -> -> # `Cuc `ui `ux `i -> -> -> 0 `i `Cuc `i 115 ]
[; ;vlf_comms2.c: 530: { if( vrx.score <= 3 )
"530
[e $ ! <= -> . _vrx 7 `i -> 3 `i 116 ]
[; ;vlf_comms2.c: 531: vrx.unlocked = 1;
"531
[e = . _vrx 8 -> -> 1 `i `uc ]
[e $U 117 ]
"532
[e :U 116 ]
[; ;vlf_comms2.c: 532: else
[; ;vlf_comms2.c: 533: vrx.preamble_score += ((((8000)/(100)) >> 3) - vrx.score );
"533
[e =+ . _vrx 5 -> - >> / -> 8000 `i -> 100 `i -> 3 `i -> . _vrx 7 `i `us ]
[e :U 117 ]
"534
[; ;vlf_comms2.c: 534: }
[e $U 118 ]
"535
[e :U 115 ]
[; ;vlf_comms2.c: 535: else
[; ;vlf_comms2.c: 536: { if( vrx.score >= 2 )
"536
[e $ ! >= -> . _vrx 7 `i -> 2 `i 119 ]
[; ;vlf_comms2.c: 537: vrx.unlocked = 1;
"537
[e = . _vrx 8 -> -> 1 `i `uc ]
[e $U 120 ]
"538
[e :U 119 ]
[; ;vlf_comms2.c: 538: else
[; ;vlf_comms2.c: 539: vrx.preamble_score += vrx.score;
"539
[e =+ . _vrx 5 -> . _vrx 7 `us ]
[e :U 120 ]
"540
[e :U 118 ]
"498
[e ++ _ii -> -> 1 `i `uc ]
[e :U 114 ]
[e $ && < -> _ii `i -> 12 `i ! != -> . _vrx 8 `i -> -> -> 0 `i `Xuc `i 111 ]
[e :U 112 ]
[; ;vlf_comms2.c: 540: }
[; ;vlf_comms2.c: 541: }
[; ;vlf_comms2.c: 543: if( vrx.prev_preamble_score != 0xFFFF )
"543
[e $ ! != -> . _vrx 6 `ui -> 65535 `ui 121 ]
[; ;vlf_comms2.c: 544: { if( ( vrx.unlocked )||( vrx.preamble_score > vrx.prev_preamble_score ) )
"544
[e $ ! || != -> . _vrx 8 `i -> -> -> 0 `i `Xuc `i > -> . _vrx 5 `ui -> . _vrx 6 `ui 122 ]
[; ;vlf_comms2.c: 545: { vrx.state = VLF_RX_LOCKED;
"545
[e = . _vrx 0 -> . `E1038 2 `uc ]
[; ;vlf_comms2.c: 546: vrx.cnt = 1;
"546
[e = . _vrx 1 -> -> 1 `i `uc ]
[; ;vlf_comms2.c: 547: vrx.prev_preamble_score = 0xFFFF;
"547
[e = . _vrx 6 -> -> 65535 `ui `us ]
"548
[; ;vlf_comms2.c: 548: }
[e $U 123 ]
"549
[e :U 122 ]
[; ;vlf_comms2.c: 549: else
[; ;vlf_comms2.c: 550: vrx.prev_preamble_score = vrx.preamble_score;
"550
[e = . _vrx 6 . _vrx 5 ]
[e :U 123 ]
"551
[; ;vlf_comms2.c: 551: }
[e $U 124 ]
"552
[e :U 121 ]
[; ;vlf_comms2.c: 552: else if( !vrx.unlocked )
[e $ ! ! != -> . _vrx 8 `i -> -> -> 0 `i `Xuc `i 125 ]
[; ;vlf_comms2.c: 553: {
[; ;vlf_comms2.c: 554: vrx.prev_preamble_score = vrx.preamble_score;
"554
[e = . _vrx 6 . _vrx 5 ]
"555
[e :U 125 ]
"556
[e :U 124 ]
[; ;vlf_comms2.c: 555: }
[; ;vlf_comms2.c: 556: }
[e $U 126 ]
"557
[e :U 110 ]
[; ;vlf_comms2.c: 557: else
[; ;vlf_comms2.c: 558: vrx.cnt++;
"558
[e ++ . _vrx 1 -> -> 1 `i `uc ]
[e :U 126 ]
[; ;vlf_comms2.c: 571: }
[; ;vlf_comms2.c: 574: break;
"574
[e $U 87 ]
[; ;vlf_comms2.c: 577: case VLF_RX_LOCKED:
"577
[e :U 127 ]
[; ;vlf_comms2.c: 578: vtx.type = 0x00;
"578
[e = . _vtx 6 -> -> 0 `i `uc ]
[; ;vlf_comms2.c: 580: if( (vrx.cnt & (((4)*4) - 1) ) ==
"581
[; ;vlf_comms2.c: 581: (((4)*4) - 1) )
[e $ ! == & -> . _vrx 1 `i - * -> 4 `i -> 4 `i -> 1 `i - * -> 4 `i -> 4 `i -> 1 `i 128 ]
[; ;vlf_comms2.c: 582: {
[; ;vlf_comms2.c: 583: for( ii = 0; (ii < 4); ii++ )
"583
[e = _ii -> -> 0 `i `uc ]
[e $ < -> _ii `i -> 4 `i 129 ]
[e $U 130 ]
"584
[e :U 129 ]
[; ;vlf_comms2.c: 584: {
[; ;vlf_comms2.c: 585: vrx.score = vrx.preamble[sizeof(vrx.preamble) - ((ii << 2) + 1)] +
"588
[; ;vlf_comms2.c: 586: vrx.preamble[sizeof(vrx.preamble) - ((ii << 2) + 2)] +
[; ;vlf_comms2.c: 587: vrx.preamble[sizeof(vrx.preamble) - ((ii << 2) + 3)] +
[; ;vlf_comms2.c: 588: vrx.preamble[sizeof(vrx.preamble) - ((ii << 2) + 4)];
[e = . _vrx 7 -> + + + -> *U + &U . _vrx 9 * -> - * -> # `uc `ui -> * -> 12 `i -> 4 `i `ui -> + << -> _ii `i -> 2 `i -> 1 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _vrx 9 * -> - * -> # `uc `ui -> * -> 12 `i -> 4 `i `ui -> + << -> _ii `i -> 2 `i -> 2 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _vrx 9 * -> - * -> # `uc `ui -> * -> 12 `i -> 4 `i `ui -> + << -> _ii `i -> 2 `i -> 3 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _vrx 9 * -> - * -> # `uc `ui -> * -> 12 `i -> 4 `i `ui -> + << -> _ii `i -> 2 `i -> 4 `i `ui `ux -> -> # `Xuc `ui `ux `i `uc ]
[; ;vlf_comms2.c: 590: vrx.score >>= 3;
"590
[e =>> . _vrx 7 -> 3 `i ]
[; ;vlf_comms2.c: 592: vtx.type <<= 1;
"592
[e =<< . _vtx 6 -> 1 `i ]
[; ;vlf_comms2.c: 593: if( vrx.score >= ((((8000)/(100)) >> 3)*3/5) )
"593
[e $ ! >= -> . _vrx 7 `i / * >> / -> 8000 `i -> 100 `i -> 3 `i -> 3 `i -> 5 `i 132 ]
[; ;vlf_comms2.c: 594: vtx.type |= 0x01;
"594
[e =| . _vtx 6 -> -> 1 `i `uc ]
[e :U 132 ]
"583
[e ++ _ii -> -> 1 `i `uc ]
[e $ < -> _ii `i -> 4 `i 129 ]
[e :U 130 ]
[; ;vlf_comms2.c: 595: }
[; ;vlf_comms2.c: 597: if( vtx.type < VLF_NO_PACKET )
"597
[e $ ! < -> . _vtx 6 `i -> . `E945 9 `i 133 ]
[; ;vlf_comms2.c: 598: {
[; ;vlf_comms2.c: 599: vrx.len = ( (BYTE)(uncoded_rx_data_size[vtx.type] + 1) );
"599
[e = . _vrx 2 -> + -> *U + &U _uncoded_rx_data_size * -> . _vtx 6 `ux -> -> # `Cuc `ui `ux `i -> 1 `i `uc ]
[; ;vlf_comms2.c: 600: vrx.ptr = &vtx.u.data[0];
"600
[e = . _vrx 3 -> &U *U + &U . . _vtx 7 0 * -> -> -> 0 `i `ui `ux -> -> # `Xuc `ui `ux `X*uc ]
[; ;vlf_comms2.c: 601: vrx.shifter = 0x01;
"601
[e = . _vrx 4 -> -> 1 `i `uc ]
[; ;vlf_comms2.c: 602: vrx.state = VLF_RX_RECEIVING;
"602
[e = . _vrx 0 -> . `E1038 3 `uc ]
[; ;vlf_comms2.c: 603: vrx.cnt = 1;
"603
[e = . _vrx 1 -> -> 1 `i `uc ]
"604
[; ;vlf_comms2.c: 604: }
[e $U 134 ]
"605
[e :U 133 ]
[; ;vlf_comms2.c: 605: else
[; ;vlf_comms2.c: 606: { vrx.state = VLF_RX_SEEKING;
"606
[e = . _vrx 0 -> . `E1038 1 `uc ]
[; ;vlf_comms2.c: 607: vrx.cnt = 0;
"607
[e = . _vrx 1 -> -> 0 `i `uc ]
"612
[e :U 134 ]
"613
[; ;vlf_comms2.c: 612: }
[; ;vlf_comms2.c: 613: }
[e $U 135 ]
"614
[e :U 128 ]
[; ;vlf_comms2.c: 614: else
[; ;vlf_comms2.c: 615: vrx.cnt++;
"615
[e ++ . _vrx 1 -> -> 1 `i `uc ]
[e :U 135 ]
[; ;vlf_comms2.c: 616: break;
"616
[e $U 87 ]
[; ;vlf_comms2.c: 619: case VLF_RX_RECEIVING:
"619
[e :U 136 ]
[; ;vlf_comms2.c: 620: if( ( vrx.cnt & ((4) - 1) ) == ((4)-1) )
"620
[e $ ! == & -> . _vrx 1 `i - -> 4 `i -> 1 `i - -> 4 `i -> 1 `i 137 ]
[; ;vlf_comms2.c: 621: {
[; ;vlf_comms2.c: 622: vrx.score = vrx.preamble[sizeof(vrx.preamble) - 1] +
"625
[; ;vlf_comms2.c: 623: vrx.preamble[sizeof(vrx.preamble) - 2] +
[; ;vlf_comms2.c: 624: vrx.preamble[sizeof(vrx.preamble) - 3] +
[; ;vlf_comms2.c: 625: vrx.preamble[sizeof(vrx.preamble) - 4];
[e = . _vrx 7 -> + + + -> *U + &U . _vrx 9 * -> - * -> # `uc `ui -> * -> 12 `i -> 4 `i `ui -> -> 1 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _vrx 9 * -> - * -> # `uc `ui -> * -> 12 `i -> 4 `i `ui -> -> 2 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _vrx 9 * -> - * -> # `uc `ui -> * -> 12 `i -> 4 `i `ui -> -> 3 `i `ui `ux -> -> # `Xuc `ui `ux `i -> *U + &U . _vrx 9 * -> - * -> # `uc `ui -> * -> 12 `i -> 4 `i `ui -> -> 4 `i `ui `ux -> -> # `Xuc `ui `ux `i `uc ]
[; ;vlf_comms2.c: 626: vrx.score >>= 3;
"626
[e =>> . _vrx 7 -> 3 `i ]
[; ;vlf_comms2.c: 629: if ( vrx.score >= ((((8000)/(100)) >> 3)*3/5) )
"629
[e $ ! >= -> . _vrx 7 `i / * >> / -> 8000 `i -> 100 `i -> 3 `i -> 3 `i -> 5 `i 138 ]
[; ;vlf_comms2.c: 630: *vrx.ptr |= vrx.shifter;
"630
[e =| *U . _vrx 3 . _vrx 4 ]
[e $U 139 ]
"631
[e :U 138 ]
[; ;vlf_comms2.c: 631: else
[; ;vlf_comms2.c: 632: *vrx.ptr &= ~vrx.shifter;
"632
[e =& *U . _vrx 3 -> ~ -> . _vrx 4 `i `uc ]
[e :U 139 ]
[; ;vlf_comms2.c: 634: if( vrx.shifter < 0x80 )
"634
[e $ ! < -> . _vrx 4 `i -> 128 `i 140 ]
[; ;vlf_comms2.c: 635: vrx.shifter <<= 1;
"635
[e =<< . _vrx 4 -> 1 `i ]
[e $U 141 ]
"636
[e :U 140 ]
[; ;vlf_comms2.c: 636: else
[; ;vlf_comms2.c: 637: { vrx.shifter = 0x01;
"637
[e = . _vrx 4 -> -> 1 `i `uc ]
[; ;vlf_comms2.c: 638: vrx.ptr++;
"638
[e ++ . _vrx 3 * -> -> 1 `i `x -> -> # `uc `i `x ]
[; ;vlf_comms2.c: 640: if( !(--vrx.len ) )
"640
[e $ ! ! != -> =- . _vrx 2 -> -> 1 `i `uc `i -> -> -> 0 `i `Xuc `i 142 ]
[; ;vlf_comms2.c: 641: { TMR2IE = 0;
"641
[e = _TMR2IE -> -> 0 `i `b ]
[; ;vlf_comms2.c: 642: TMR2ON = 0;
"642
[e = _TMR2ON -> -> 0 `i `b ]
[; ;vlf_comms2.c: 643: vrx.state = VLF_PACKET_READY;
"643
[e = . _vrx 0 -> . `E1038 4 `uc ]
[; ;vlf_comms2.c: 644: return( (1) );
"644
[e ) -> -> 1 `i `uc ]
[e $UE 86 ]
"645
[e :U 142 ]
"646
[e :U 141 ]
"655
[e :U 137 ]
[; ;vlf_comms2.c: 645: }
[; ;vlf_comms2.c: 646: }
[; ;vlf_comms2.c: 655: }
[; ;vlf_comms2.c: 656: vrx.cnt++;
"656
[e ++ . _vrx 1 -> -> 1 `i `uc ]
[; ;vlf_comms2.c: 657: break;
"657
[e $U 87 ]
[; ;vlf_comms2.c: 659: case VLF_PACKET_READY:
"659
[e :U 143 ]
[; ;vlf_comms2.c: 660: return( (1) );
"660
[e ) -> -> 1 `i `uc ]
[e $UE 86 ]
"661
[; ;vlf_comms2.c: 661: }
[e $U 87 ]
"422
[e :U 88 ]
[e [\ . _vrx 0 , $ -> . `E1038 0 `uc 89
 , $ -> . `E1038 1 `uc 109
 , $ -> . `E1038 2 `uc 127
 , $ -> . `E1038 3 `uc 136
 , $ -> . `E1038 4 `uc 143
 87 ]
"661
[e :U 87 ]
[; ;vlf_comms2.c: 664: for( ii = 0; ii < sizeof(vrx.preamble) - 1; ii++ )
"664
[e = _ii -> -> 0 `i `uc ]
[e $ < -> _ii `ui - * -> # `uc `ui -> * -> 12 `i -> 4 `i `ui -> -> 1 `i `ui 144 ]
[e $U 145 ]
"665
[e :U 144 ]
[; ;vlf_comms2.c: 665: vrx.preamble[ii] = vrx.preamble[ii+1];
[e = *U + &U . _vrx 9 * -> _ii `ux -> -> # `Xuc `ui `ux *U + &U . _vrx 9 * -> -> + -> _ii `i -> 1 `i `ui `ux -> -> # `Xuc `ui `ux ]
"664
[e ++ _ii -> -> 1 `i `uc ]
[e $ < -> _ii `ui - * -> # `uc `ui -> * -> 12 `i -> 4 `i `ui -> -> 1 `i `ui 144 ]
[e :U 145 ]
[; ;vlf_comms2.c: 667: return( (0) );
"667
[e ) -> -> 0 `i `uc ]
[e $UE 86 ]
"668
[; ;vlf_comms2.c: 668: }
[e :UE 86 ]
}
"677
[v _VLF_ReplyToBroadcastRequest `(v 1 ef1`uc ]
{
[v _intervals `uc 1 r1 ]
[e :U _VLF_ReplyToBroadcastRequest ]
[f ]
[; ;vlf_comms2.c: 676: void VLF_ReplyToBroadcastRequest( BYTE intervals )
[; ;vlf_comms2.c: 677: {
"678
[v _rand_time_u8 `uc 1 a ]
[; ;vlf_comms2.c: 678: BYTE rand_time_u8;
[; ;vlf_comms2.c: 679: rand_time_u8 = rand() % intervals;
"679
[v _rand `(i 0 ef ]
[e = _rand_time_u8 -> % ( _rand ..  -> _intervals `i `uc ]
[; ;vlf_comms2.c: 680: while( rand_time_u8-- )
"680
[e $U 148 ]
[e :U 149 ]
[; ;vlf_comms2.c: 681: delay_ms( 290 );
"681
[e ( _delay_ms (1 -> -> 290 `i `us ]
[e :U 148 ]
"680
[e $ != -> -- _rand_time_u8 -> -> 1 `i `uc `i -> -> -> 0 `i `uc `i 149 ]
[e :U 150 ]
[; ;vlf_comms2.c: 682: VLF_SendGeneric();
"682
[e ( _VLF_SendGeneric ..  ]
"683
[; ;vlf_comms2.c: 683: }
[e :UE 147 ]
}
"689
[v _VLF_ReplyLocateRequest `(v 1 ef1`uc ]
{
[v _locate_seconds `uc 1 r1 ]
[e :U _VLF_ReplyLocateRequest ]
[f ]
[; ;vlf_comms2.c: 688: void VLF_ReplyLocateRequest( uchar locate_seconds )
[; ;vlf_comms2.c: 689: {
"714
[v _timeout `us 1 a ]
[; ;vlf_comms2.c: 714: ushort timeout;
[; ;vlf_comms2.c: 716: locate_seconds <<= 1;
"716
[e =<< _locate_seconds -> 1 `i ]
[; ;vlf_comms2.c: 718: while( locate_seconds-- )
"718
[e $U 152 ]
[e :U 153 ]
[; ;vlf_comms2.c: 719: {
[; ;vlf_comms2.c: 720: timeout = (timer.cnt + (ushort)((15.2588 + 1) / 2));
"720
[e = _timeout -> + -> . _timer 2 `ui -> -> / + .15.2588 -> -> 1 `i `d -> -> 2 `i `d `us `ui `us ]
[; ;vlf_comms2.c: 722: VLF_SendGeneric();
"722
[e ( _VLF_SendGeneric ..  ]
[; ;vlf_comms2.c: 723: while( vtx.state != VLF_TX_IDLE );
"723
[e $U 155 ]
[e :U 156 ]
[e :U 155 ]
[e $ != -> . _vtx 0 `i -> . `E1044 0 `i 156 ]
[e :U 157 ]
[; ;vlf_comms2.c: 725: while( chk_timeout( timeout ) == (0) )
"725
[v _chk_timeout `(uc 0 ef1`us ]
[e $U 158 ]
[e :U 159 ]
[; ;vlf_comms2.c: 726: {
"728
[e :U 158 ]
"725
[e $ == -> ( _chk_timeout (1 _timeout `i -> 0 `i 159 ]
[e :U 160 ]
"729
[e :U 152 ]
"718
[e $ != -> -- _locate_seconds -> -> 1 `i `uc `i -> -> -> 0 `i `uc `i 153 ]
[e :U 154 ]
"731
[; ;vlf_comms2.c: 728: }
[; ;vlf_comms2.c: 729: }
[; ;vlf_comms2.c: 731: }
[e :UE 151 ]
}
"741
[v _VLF_StartReceiver `(v 1 ef ]
{
[e :U _VLF_StartReceiver ]
[f ]
[; ;vlf_comms2.c: 740: void VLF_StartReceiver(void)
[; ;vlf_comms2.c: 741: {
[; ;vlf_comms2.c: 742: vtx.type = VLF_NO_PACKET;
"742
[e = . _vtx 6 -> . `E945 9 `uc ]
[; ;vlf_comms2.c: 743: vrx.len = 0;
"743
[e = . _vrx 2 -> -> 0 `i `uc ]
[; ;vlf_comms2.c: 744: vrx.cnt = 0;
"744
[e = . _vrx 1 -> -> 0 `i `uc ]
[; ;vlf_comms2.c: 745: vtx.state = VLF_TX_IDLE;
"745
[e = . _vtx 0 -> . `E1044 0 `uc ]
[; ;vlf_comms2.c: 746: vrx.state = VLF_RX_SEEKING;
"746
[e = . _vrx 0 -> . `E1038 1 `uc ]
[; ;vlf_comms2.c: 747: vlf_state = VLF_STATE_IDLE;
"747
[e = _vlf_state -> . `E1034 0 `uc ]
[; ;vlf_comms2.c: 749: vrx.prev_preamble_score = 0xFFFF;
"749
[e = . _vrx 6 -> -> 65535 `ui `us ]
[; ;vlf_comms2.c: 751: SWDTEN = 0;
"751
[e = _SWDTEN -> -> 0 `i `b ]
[; ;vlf_comms2.c: 754: OPTION = 0x68;
"754
[e = _OPTION -> -> 104 `i `uc ]
[; ;vlf_comms2.c: 756: asm("clrwdt");
"756
[; clrwdt ;#
[; ;vlf_comms2.c: 757: SWDTEN = 1;
"757
[e = _SWDTEN -> -> 1 `i `b ]
[; ;vlf_comms2.c: 764: TMR0 = 0;
"764
[e = _TMR0 -> -> 0 `i `uc ]
[; ;vlf_comms2.c: 765: T2CON = ( 4 << 3 ) | 1;
"765
[e = _T2CON -> | << -> 4 `i -> 3 `i -> 1 `i `uc ]
[; ;vlf_comms2.c: 766: PR2 = ((2000000/(1<<(2*1))/(4+1)/((100))/((4))) - 1);
"766
[e = _PR2 -> - / / / / -> 2000000 `l -> << -> 1 `i * -> 2 `i -> 1 `i `l -> + -> 4 `i -> 1 `i `l -> -> 100 `i `l -> -> 4 `i `l -> -> 1 `i `l `uc ]
[; ;vlf_comms2.c: 767: TMR2 = 0;
"767
[e = _TMR2 -> -> 0 `i `uc ]
[; ;vlf_comms2.c: 768: TMR2ON = 1;
"768
[e = _TMR2ON -> -> 1 `i `b ]
[; ;vlf_comms2.c: 770: TMR2IF = 0;
"770
[e = _TMR2IF -> -> 0 `i `b ]
[; ;vlf_comms2.c: 771: TMR2IE = 1;
"771
[e = _TMR2IE -> -> 1 `i `b ]
"772
[; ;vlf_comms2.c: 772: }
[e :UE 161 ]
}
"778
[v _VLF_StopReceiver `(v 1 ef ]
{
[e :U _VLF_StopReceiver ]
[f ]
[; ;vlf_comms2.c: 777: void VLF_StopReceiver(void)
[; ;vlf_comms2.c: 778: {
[; ;vlf_comms2.c: 779: TMR2IE = 0;
"779
[e = _TMR2IE -> -> 0 `i `b ]
[; ;vlf_comms2.c: 780: TMR2ON = 0;
"780
[e = _TMR2ON -> -> 0 `i `b ]
"781
[; ;vlf_comms2.c: 781: }
[e :UE 162 ]
}
"789
[v _VLF_SendPacket `(v 1 sf ]
{
[e :U _VLF_SendPacket ]
[f ]
[; ;vlf_comms2.c: 788: static void VLF_SendPacket(void)
[; ;vlf_comms2.c: 789: {
[; ;vlf_comms2.c: 794: TMR2IE = 0;
"794
[e = _TMR2IE -> -> 0 `i `b ]
[; ;vlf_comms2.c: 795: TMR2ON = 0;
"795
[e = _TMR2ON -> -> 0 `i `b ]
[; ;vlf_comms2.c: 796: TMR2 = 0;
"796
[e = _TMR2 -> -> 0 `i `uc ]
[; ;vlf_comms2.c: 799: T2CON = (4 << 3) | 0;
"799
[e = _T2CON -> | << -> 4 `i -> 3 `i -> 0 `i `uc ]
[; ;vlf_comms2.c: 800: PR2 = (BYTE)((2000000/(1<<(2*0))/((35714.2857))) - 1);
"800
[e = _PR2 -> - / -> / -> 2000000 `l -> << -> 1 `i * -> 2 `i -> 0 `i `l `d .35714.2857 -> -> 1 `i `d `uc ]
[; ;vlf_comms2.c: 806: CCPR1L = (BYTE)(2000000/(1<<(2*0))*4/((35714.2857))/2) >> 2;
"806
[e = _CCPR1L -> >> -> -> / / -> * / -> 2000000 `l -> << -> 1 `i * -> 2 `i -> 0 `i `l -> -> 4 `i `l `d .35714.2857 -> -> 2 `i `d `uc `i -> 2 `i `uc ]
[; ;vlf_comms2.c: 807: CCP1CON = ( ( (BYTE)(2000000/(1<<(2*0))*4/((35714.2857))/2) & 3 ) << 4 );
"807
[e = _CCP1CON -> << & -> -> / / -> * / -> 2000000 `l -> << -> 1 `i * -> 2 `i -> 0 `i `l -> -> 4 `i `l `d .35714.2857 -> -> 2 `i `d `uc `i -> 3 `i -> 4 `i `uc ]
[; ;vlf_comms2.c: 809: vtx.cnt = 0;
"809
[e = . _vtx 1 -> -> 0 `i `uc ]
[; ;vlf_comms2.c: 810: vtx.state = VLF_TX_PACKET_PREAMBLE;
"810
[e = . _vtx 0 -> . `E1044 2 `uc ]
[; ;vlf_comms2.c: 812: SWDTEN = 0;
"812
[e = _SWDTEN -> -> 0 `i `b ]
[; ;vlf_comms2.c: 813: OPTION = 0xC0 | 5;
"813
[e = _OPTION -> | -> 192 `i -> 5 `i `uc ]
[; ;vlf_comms2.c: 817: asm("clrwdt");
"817
[; clrwdt ;#
[; ;vlf_comms2.c: 818: SWDTEN = 1;
"818
[e = _SWDTEN -> -> 1 `i `b ]
[; ;vlf_comms2.c: 820: T0IF = 0;
"820
[e = _T0IF -> -> 0 `i `b ]
[; ;vlf_comms2.c: 821: TMR0 = 0xFF;
"821
[e = _TMR0 -> -> 255 `i `uc ]
[; ;vlf_comms2.c: 822: T0IE = 1;
"822
[e = _T0IE -> -> 1 `i `b ]
[; ;vlf_comms2.c: 823: TMR2ON = 1;
"823
[e = _TMR2ON -> -> 1 `i `b ]
"824
[; ;vlf_comms2.c: 824: }
[e :UE 163 ]
}
"830
[v _VLF_SendGeneric `(v 1 ef ]
{
[e :U _VLF_SendGeneric ]
[f ]
[; ;vlf_comms2.c: 829: void VLF_SendGeneric(void)
[; ;vlf_comms2.c: 830: {
"831
[v _crc `uc 1 a ]
[; ;vlf_comms2.c: 831: BYTE crc;
[; ;vlf_comms2.c: 832: vtx.type = VLF_MU_DETECT;
"832
[e = . _vtx 6 -> . `E945 0 `uc ]
[; ;vlf_comms2.c: 833: vtx.u.responce.mid_s.val[0] = mid.b[3];
"833
[e = *U + &U . . . . _vtx 7 5 0 0 * -> -> -> 0 `i `ui `ux -> -> # `Xuc `ui `ux *U + &U . _mid 0 * -> -> -> 3 `i `ui `ux -> -> # `uc `ui `ux ]
[; ;vlf_comms2.c: 834: vtx.u.responce.mid_s.val[1] = mid.b[2];
"834
[e = *U + &U . . . . _vtx 7 5 0 0 * -> -> -> 1 `i `ui `ux -> -> # `Xuc `ui `ux *U + &U . _mid 0 * -> -> -> 2 `i `ui `ux -> -> # `uc `ui `ux ]
[; ;vlf_comms2.c: 835: vtx.u.responce.mid_s.val[2] = mid.b[1];
"835
[e = *U + &U . . . . _vtx 7 5 0 0 * -> -> -> 2 `i `ui `ux -> -> # `Xuc `ui `ux *U + &U . _mid 0 * -> -> -> 1 `i `ui `ux -> -> # `uc `ui `ux ]
[; ;vlf_comms2.c: 836: vtx.u.responce.m.status = 0;
"836
[e = . . . . _vtx 7 5 1 1 -> -> 0 `i `uc ]
[; ;vlf_comms2.c: 840: vtx.u.responce.m.s.mobility = 1;
"840
[e = . . . . . _vtx 7 5 1 0 0 -> -> 1 `i `uc ]
[; ;vlf_comms2.c: 842: vtx.u.responce.m.s.masked = ( lamp_state == LAMP_SEARCH_IN_PROGRESS ) ? 1 : 0;
"842
[e = . . . . . _vtx 7 5 1 0 4 -> ? == -> _lamp_state `i -> . `E914 2 `i : -> 1 `i -> 0 `i `uc ]
[; ;vlf_comms2.c: 844: crc = buffcrc( vtx.u.data, 0x28, 4 );
"844
[e = _crc ( _buffcrc (3 , , -> &U . . _vtx 7 0 `*uc -> -> 40 `i `uc -> -> 4 `i `uc ]
[; ;vlf_comms2.c: 845: crc = get_crc( crc, 0x00 );
"845
[e = _crc ( _get_crc (2 , _crc -> -> 0 `i `uc ]
[; ;vlf_comms2.c: 848: if( crc == 0xA5 )
"848
[e $ ! == -> _crc `i -> 165 `i 165 ]
[; ;vlf_comms2.c: 849: { vtx.u.responce.m.s.bit6 = 1;
"849
[e = . . . . . _vtx 7 5 1 0 2 -> -> 1 `i `uc ]
[; ;vlf_comms2.c: 850: crc = buffcrc( &vtx.u.data[0], 0x28, 4 );
"850
[e = _crc ( _buffcrc (3 , , -> &U *U + &U . . _vtx 7 0 * -> -> -> 0 `i `ui `ux -> -> # `Xuc `ui `ux `*uc -> -> 40 `i `uc -> -> 4 `i `uc ]
[; ;vlf_comms2.c: 851: crc = get_crc( crc, 0x00 );
"851
[e = _crc ( _get_crc (2 , _crc -> -> 0 `i `uc ]
"852
[e :U 165 ]
[; ;vlf_comms2.c: 852: }
[; ;vlf_comms2.c: 853: vtx.u.data[4] = crc;
"853
[e = *U + &U . . _vtx 7 0 * -> -> -> 4 `i `ui `ux -> -> # `Xuc `ui `ux _crc ]
[; ;vlf_comms2.c: 854: VLF_SendPacket();
"854
[e ( _VLF_SendPacket ..  ]
"855
[; ;vlf_comms2.c: 855: }
[e :UE 164 ]
}
